/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtubois.gui;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Point;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JToggleButton;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.MatteBorder;
import virtubois.domain.Paquet;
import virtubois.domain.SerialisationFichier;
import virtubois.domain.SerialisationFichier3D;
import virtubois.domain.VirtuBoisControleur;

import static virtubois.domain.Commun.Constantes.ANGLE_COMPLET_CERCLE;
import static virtubois.domain.Commun.Constantes.COULEUR_BORDURE_CHAMP;
import static virtubois.domain.Commun.Constantes.COULEUR_BORDURE_CHAMP_SELECTIONNE;
import static virtubois.domain.Commun.Constantes.COULEUR_BOUTON;
import static virtubois.domain.Commun.Constantes.COULEUR_BOUTON_SELECTIONNE;
import static virtubois.domain.Commun.Constantes.COULEUR_CHAMP_ERREUR;
import static virtubois.domain.Commun.Constantes.COULEUR_LIBELLE;
import static virtubois.domain.Commun.Constantes.HAUTEUR_BORDURE;
import static virtubois.domain.Commun.Constantes.NOUVEAU_PAQUET_ANGLE;
import static virtubois.domain.Commun.Constantes.NOUVEAU_PAQUET_LARGEUR;
import static virtubois.domain.Commun.Constantes.NOUVEAU_PAQUET_LONGUEUR;
import static virtubois.domain.Commun.Constantes.VALEUR_DIX_MILLE;
import static virtubois.domain.Commun.Constantes.VALEUR_UN;
import static virtubois.domain.Commun.Constantes.VALEUR_ZERO;

/**
 *
 * @author maximeprieur
 */
public class MainWindow extends javax.swing.JFrame {

    public VirtuBoisControleur controleur;
    private ModeApplication modeApplication;
    private List<VirtuBoisControleur> anciensEtats;
    private List<VirtuBoisControleur> futursEtats;
    // Ces attributs servent à la gestion du déplacement.
    public Point actualMousePoint = new Point();
    public Point delta = new Point();

    public enum ModeApplication {
        AFFICHAGE_PAQUET,
        AJOUT,
        SELECTION
    }

    public MainWindow() {
        this.controleur = new VirtuBoisControleur();
        this.anciensEtats = new ArrayList<>();
        this.futursEtats = new ArrayList<>();
        initComponents();
        this.cacherPanneauBandeau();
        this.changerInformationChargeuse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        drawingPanelCoursABois1 = new virtubois.gui.DrawingPanelCoursABois(this);
        ZoomerButton = new javax.swing.JButton();
        DezoomerButton = new javax.swing.JButton();
        InfoPaquetFenetrePanel = new javax.swing.JScrollPane();
        InfoPaquetEntetePanel = new javax.swing.JPanel();
        Entete = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        XPaquetLabel = new javax.swing.JLabel();
        YLabelLabel = new javax.swing.JLabel();
        CodeLabel = new javax.swing.JLabel();
        DateLabel = new javax.swing.JLabel();
        ProduitLabel = new javax.swing.JLabel();
        ProfondeurLabel = new javax.swing.JLabel();
        AngleLabel = new javax.swing.JLabel();
        PaquetHauteurTextbox = new javax.swing.JTextField();
        PaquetXTextbox = new javax.swing.JTextField();
        PaquetYTextbox = new javax.swing.JTextField();
        PaquetCodeBarreTextbox = new javax.swing.JTextField();
        PaquetProduitTextbox = new javax.swing.JTextField();
        PaquetDateProductionTextbox = new javax.swing.JTextField();
        PaquetAngleTextbox = new javax.swing.JTextField();
        PaquetLongueurTextbox = new javax.swing.JTextField();
        LongueurLabel = new javax.swing.JLabel();
        LargeurLabel = new javax.swing.JLabel();
        PaquetLargeurTextbox = new javax.swing.JTextField();
        ZLabel = new javax.swing.JLabel();
        PaquetZTextbox = new javax.swing.JTextField();
        HauteurLabel = new javax.swing.JLabel();
        PaquetEtageTextbox = new javax.swing.JTextField();
        CoordSourisPanel = new javax.swing.JPanel();
        CoordSourisEntetePanel = new javax.swing.JPanel();
        TitreCoordSourisLabel = new javax.swing.JLabel();
        CoordSourisCorpsPanel = new javax.swing.JPanel();
        SourisXLabel = new javax.swing.JLabel();
        SourisXTextbox = new javax.swing.JTextField();
        SourisYLabel = new javax.swing.JLabel();
        SourisYTextbox = new javax.swing.JTextField();
        DeplacementBoutonHaut = new javax.swing.JButton();
        DeplacementBoutonBas = new javax.swing.JButton();
        DeplacementBoutonDroite = new javax.swing.JButton();
        DeplacementBoutonGauche = new javax.swing.JButton();
        SupprimerBouton = new javax.swing.JButton();
        GrilleMagnetiqueBouton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VuePilePanel = new javax.swing.JPanel();
        VuePileEntetePanel = new javax.swing.JPanel();
        TitreVuePileLabel = new javax.swing.JLabel();
        drawingPanelAffichagePile1 = new virtubois.gui.DrawingPanelAffichagePile(this);
        ZLabel1 = new javax.swing.JLabel();
        PaquetZTextbox1 = new javax.swing.JTextField();
        ZLabel2 = new javax.swing.JLabel();
        nbPaquetPileTextBox = new javax.swing.JTextField();
        ChargeuseScrollPan = new javax.swing.JScrollPane();
        InfoChargeusePanel = new javax.swing.JPanel(new FlowLayout(FlowLayout.CENTER));
        InfoChargeuseEntetePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        InfoChargeuseCorpsPanel = new javax.swing.JPanel();
        TitreChargeuseLabel = new javax.swing.JLabel();
        ChargeuseXLabel = new javax.swing.JLabel();
        ChargeuseXTextbox = new javax.swing.JTextField();
        ChargeuseYLabel = new javax.swing.JLabel();
        ChargeuseYTextbox = new javax.swing.JTextField();
        TitreBrasLabel = new javax.swing.JLabel();
        BrasHauteurLabel = new javax.swing.JLabel();
        BrasHauteurTextbox = new javax.swing.JTextField();
        BrasAngleLabel = new javax.swing.JLabel();
        BrasAngleTextbox = new javax.swing.JTextField();
        ChargeuseLongueurLabel = new javax.swing.JLabel();
        ChargeuseLargeurLabel = new javax.swing.JLabel();
        ChargeuseLargeurTextbox = new javax.swing.JTextField();
        ChargeuseLongueurTextbox = new javax.swing.JTextField();
        BrasLongueurLabel1 = new javax.swing.JLabel();
        BrasLargeurLabel1 = new javax.swing.JLabel();
        BrasLongueurTextbox = new javax.swing.JTextField();
        BrasLargeurTextbox = new javax.swing.JTextField();
        LibellePositionXBrasChargeuse = new javax.swing.JLabel();
        BrasChargeusePositionX = new javax.swing.JTextField();
        LibellePositionYBrasChargeuse = new javax.swing.JLabel();
        BrasChargeusePositionY = new javax.swing.JTextField();
        AjouterButton = new javax.swing.JToggleButton();
        PanneauBandeau = new javax.swing.JPanel();
        LibelleBandeau = new javax.swing.JLabel();
        BoutonFermerBandeau = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        LoadFileButton = new javax.swing.JMenuItem();
        SaveButton = new javax.swing.JMenuItem();
        Export3DButton = new javax.swing.JMenuItem();
        QuitButton = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        ReinitialiserBouton = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        UndoButton = new javax.swing.JMenuItem();
        RepeatButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        MainPanel.setLayout(new java.awt.BorderLayout());

        drawingPanelCoursABois1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawingPanelCoursABois1MouseDragged(evt);
            }
        });

        ZoomerButton.setBackground(new java.awt.Color(255, 255, 255));
        ZoomerButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        ZoomerButton.setForeground(new java.awt.Color(63, 82, 181));
        ZoomerButton.setText("+");
        ZoomerButton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        ZoomerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ZoomerButton.setFocusable(false);
        ZoomerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ZoomerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ZoomerButtonMouseExited(evt);
            }
        });
        ZoomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomerButtonActionPerformed(evt);
            }
        });

        DezoomerButton.setBackground(new java.awt.Color(255, 255, 255));
        DezoomerButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        DezoomerButton.setForeground(new java.awt.Color(63, 82, 181));
        DezoomerButton.setText("-");
        DezoomerButton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        DezoomerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DezoomerButton.setFocusable(false);
        DezoomerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DezoomerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DezoomerButtonMouseExited(evt);
            }
        });
        DezoomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DezoomerButtonActionPerformed(evt);
            }
        });

        InfoPaquetFenetrePanel.setBorder(null);
        InfoPaquetFenetrePanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        InfoPaquetFenetrePanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        InfoPaquetEntetePanel.setBackground(new java.awt.Color(255, 255, 255));
        InfoPaquetEntetePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(189, 189, 189)));
        InfoPaquetEntetePanel.setForeground(new java.awt.Color(255, 255, 255));
        InfoPaquetEntetePanel.setPreferredSize(new java.awt.Dimension(135, 34));

        Entete.setBackground(new java.awt.Color(63, 82, 181));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Informations Paquet");

        javax.swing.GroupLayout EnteteLayout = new javax.swing.GroupLayout(Entete);
        Entete.setLayout(EnteteLayout);
        EnteteLayout.setHorizontalGroup(
            EnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EnteteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(32, 32, 32))
        );
        EnteteLayout.setVerticalGroup(
            EnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnteteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        XPaquetLabel.setText("Position X");

        YLabelLabel.setText("Position Y");

        CodeLabel.setText("Code Barre");

        DateLabel.setText("Date et heure de production");

        ProduitLabel.setText("Produit");

        ProfondeurLabel.setText("Hauteur");

        AngleLabel.setText("Angle");

        PaquetHauteurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetHauteurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetHauteurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetHauteurTextboxFocusLost(evt);
            }
        });
        PaquetHauteurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetHauteurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetHauteurTextboxMouseExited(evt);
            }
        });
        PaquetHauteurTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetHauteurTextboxActionPerformed(evt);
            }
        });
        PaquetHauteurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetHauteurTextboxKeyReleased(evt);
            }
        });

        PaquetXTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetXTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetXTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetXTextboxFocusLost(evt);
            }
        });
        PaquetXTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetXTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetXTextboxMouseExited(evt);
            }
        });
        PaquetXTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetXTextboxActionPerformed(evt);
            }
        });
        PaquetXTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetXTextboxKeyReleased(evt);
            }
        });

        PaquetYTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetYTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetYTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetYTextboxFocusLost(evt);
            }
        });
        PaquetYTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetYTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetYTextboxMouseExited(evt);
            }
        });
        PaquetYTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetYTextboxActionPerformed(evt);
            }
        });
        PaquetYTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetYTextboxKeyReleased(evt);
            }
        });

        PaquetCodeBarreTextbox.setBackground(new java.awt.Color(245, 245, 245));
        PaquetCodeBarreTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetCodeBarreTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        PaquetCodeBarreTextbox.setEnabled(false);
        PaquetCodeBarreTextbox.setFocusable(false);
        PaquetCodeBarreTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetCodeBarreTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetCodeBarreTextboxFocusLost(evt);
            }
        });
        PaquetCodeBarreTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetCodeBarreTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetCodeBarreTextboxMouseExited(evt);
            }
        });
        PaquetCodeBarreTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetCodeBarreTextboxActionPerformed(evt);
            }
        });

        PaquetProduitTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetProduitTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetProduitTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetProduitTextboxFocusLost(evt);
            }
        });
        PaquetProduitTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetProduitTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetProduitTextboxMouseExited(evt);
            }
        });
        PaquetProduitTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetProduitTextboxActionPerformed(evt);
            }
        });
        PaquetProduitTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetProduitTextboxKeyReleased(evt);
            }
        });

        PaquetDateProductionTextbox.setBackground(new java.awt.Color(245, 245, 245));
        PaquetDateProductionTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetDateProductionTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        PaquetDateProductionTextbox.setEnabled(false);
        PaquetDateProductionTextbox.setFocusable(false);
        PaquetDateProductionTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetDateProductionTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetDateProductionTextboxFocusLost(evt);
            }
        });
        PaquetDateProductionTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetDateProductionTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetDateProductionTextboxMouseExited(evt);
            }
        });
        PaquetDateProductionTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetDateProductionTextboxActionPerformed(evt);
            }
        });

        PaquetAngleTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetAngleTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetAngleTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetAngleTextboxFocusLost(evt);
            }
        });
        PaquetAngleTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetAngleTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetAngleTextboxMouseExited(evt);
            }
        });
        PaquetAngleTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetAngleTextboxKeyReleased(evt);
            }
        });

        PaquetLongueurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetLongueurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetLongueurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetLongueurTextboxFocusLost(evt);
            }
        });
        PaquetLongueurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetLongueurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetLongueurTextboxMouseExited(evt);
            }
        });
        PaquetLongueurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetLongueurTextboxKeyReleased(evt);
            }
        });

        LongueurLabel.setText("Longueur");

        LargeurLabel.setText("Largeur");

        PaquetLargeurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetLargeurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetLargeurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetLargeurTextboxFocusLost(evt);
            }
        });
        PaquetLargeurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetLargeurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetLargeurTextboxMouseExited(evt);
            }
        });
        PaquetLargeurTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetLargeurTextboxActionPerformed(evt);
            }
        });
        PaquetLargeurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PaquetLargeurTextboxKeyReleased(evt);
            }
        });

        ZLabel.setText("Position Z");

        PaquetZTextbox.setBackground(new java.awt.Color(245, 245, 245));
        PaquetZTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetZTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        PaquetZTextbox.setEnabled(false);
        PaquetZTextbox.setFocusable(false);
        PaquetZTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetZTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetZTextboxFocusLost(evt);
            }
        });
        PaquetZTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetZTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetZTextboxMouseExited(evt);
            }
        });
        PaquetZTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetZTextboxActionPerformed(evt);
            }
        });

        HauteurLabel.setText("Étage");

        PaquetEtageTextbox.setBackground(new java.awt.Color(245, 245, 245));
        PaquetEtageTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetEtageTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        PaquetEtageTextbox.setEnabled(false);
        PaquetEtageTextbox.setFocusable(false);
        PaquetEtageTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetEtageTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetEtageTextboxFocusLost(evt);
            }
        });
        PaquetEtageTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetEtageTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetEtageTextboxMouseExited(evt);
            }
        });
        PaquetEtageTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetEtageTextboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InfoPaquetEntetePanelLayout = new javax.swing.GroupLayout(InfoPaquetEntetePanel);
        InfoPaquetEntetePanel.setLayout(InfoPaquetEntetePanelLayout);
        InfoPaquetEntetePanelLayout.setHorizontalGroup(
            InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Entete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                        .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(CodeLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                                    .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                                            .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(AngleLabel)
                                                .addComponent(ZLabel)
                                                .addComponent(LongueurLabel))
                                            .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createSequentialGroup()
                                            .addComponent(LargeurLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PaquetLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PaquetAngleTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PaquetLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PaquetEtageTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(16, 16, 16))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createSequentialGroup()
                                    .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ProfondeurLabel)
                                        .addComponent(ProduitLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PaquetProduitTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PaquetHauteurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(DateLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(PaquetZTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createSequentialGroup()
                                        .addComponent(YLabelLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PaquetYTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createSequentialGroup()
                                        .addComponent(XPaquetLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PaquetXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoPaquetEntetePanelLayout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addComponent(PaquetCodeBarreTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                        .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PaquetDateProductionTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HauteurLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        InfoPaquetEntetePanelLayout.setVerticalGroup(
            InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                .addComponent(Entete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XPaquetLabel)
                    .addComponent(PaquetXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PaquetYTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YLabelLabel))
                .addGap(12, 12, 12)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZLabel)
                    .addComponent(PaquetZTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodeLabel)
                    .addComponent(PaquetCodeBarreTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(DateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PaquetDateProductionTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProduitLabel)
                    .addComponent(PaquetProduitTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProfondeurLabel)
                    .addComponent(PaquetHauteurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AngleLabel)
                    .addComponent(PaquetAngleTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(LongueurLabel))
                    .addGroup(InfoPaquetEntetePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PaquetLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LargeurLabel)
                    .addComponent(PaquetLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InfoPaquetEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HauteurLabel)
                    .addComponent(PaquetEtageTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        InfoPaquetFenetrePanel.setViewportView(InfoPaquetEntetePanel);

        CoordSourisPanel.setBackground(new java.awt.Color(236, 240, 241));

        CoordSourisEntetePanel.setBackground(new java.awt.Color(63, 82, 181));
        CoordSourisEntetePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(189, 189, 189)));
        CoordSourisEntetePanel.setForeground(new java.awt.Color(255, 255, 255));

        TitreCoordSourisLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TitreCoordSourisLabel.setForeground(new java.awt.Color(255, 255, 255));
        TitreCoordSourisLabel.setText("Souris");

        javax.swing.GroupLayout CoordSourisEntetePanelLayout = new javax.swing.GroupLayout(CoordSourisEntetePanel);
        CoordSourisEntetePanel.setLayout(CoordSourisEntetePanelLayout);
        CoordSourisEntetePanelLayout.setHorizontalGroup(
            CoordSourisEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoordSourisEntetePanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(TitreCoordSourisLabel)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        CoordSourisEntetePanelLayout.setVerticalGroup(
            CoordSourisEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoordSourisEntetePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitreCoordSourisLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CoordSourisCorpsPanel.setBackground(new java.awt.Color(255, 255, 255));

        SourisXLabel.setForeground(new java.awt.Color(117, 117, 117));
        SourisXLabel.setText("X");

        SourisXTextbox.setBackground(new java.awt.Color(245, 245, 245));
        SourisXTextbox.setText("0.000");
        SourisXTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        SourisXTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        SourisXTextbox.setEnabled(false);
        SourisXTextbox.setFocusable(false);
        SourisXTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SourisXTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SourisXTextboxFocusLost(evt);
            }
        });
        SourisXTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SourisXTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SourisXTextboxMouseExited(evt);
            }
        });

        SourisYLabel.setForeground(new java.awt.Color(117, 117, 117));
        SourisYLabel.setText("Y");

        SourisYTextbox.setBackground(new java.awt.Color(245, 245, 245));
        SourisYTextbox.setText("0.000");
        SourisYTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        SourisYTextbox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        SourisYTextbox.setEnabled(false);
        SourisYTextbox.setFocusable(false);
        SourisYTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SourisYTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SourisYTextboxFocusLost(evt);
            }
        });
        SourisYTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SourisYTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SourisYTextboxMouseExited(evt);
            }
        });
        SourisYTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SourisYTextboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CoordSourisCorpsPanelLayout = new javax.swing.GroupLayout(CoordSourisCorpsPanel);
        CoordSourisCorpsPanel.setLayout(CoordSourisCorpsPanelLayout);
        CoordSourisCorpsPanelLayout.setHorizontalGroup(
            CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
            .addGroup(CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addGroup(CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                            .addComponent(SourisXLabel)
                            .addGap(18, 18, 18)
                            .addComponent(SourisXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                            .addComponent(SourisYLabel)
                            .addGap(18, 18, 18)
                            .addComponent(SourisYTextbox, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                    .addContainerGap(14, Short.MAX_VALUE)))
        );
        CoordSourisCorpsPanelLayout.setVerticalGroup(
            CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
            .addGroup(CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addGroup(CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addComponent(SourisXLabel))
                        .addComponent(SourisXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(6, 6, 6)
                    .addGroup(CoordSourisCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CoordSourisCorpsPanelLayout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addComponent(SourisYLabel))
                        .addComponent(SourisYTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(29, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout CoordSourisPanelLayout = new javax.swing.GroupLayout(CoordSourisPanel);
        CoordSourisPanel.setLayout(CoordSourisPanelLayout);
        CoordSourisPanelLayout.setHorizontalGroup(
            CoordSourisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CoordSourisEntetePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(CoordSourisPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CoordSourisCorpsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        CoordSourisPanelLayout.setVerticalGroup(
            CoordSourisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoordSourisPanelLayout.createSequentialGroup()
                .addComponent(CoordSourisEntetePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoordSourisCorpsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        DeplacementBoutonHaut.setBackground(new java.awt.Color(255, 255, 255));
        DeplacementBoutonHaut.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        DeplacementBoutonHaut.setForeground(new java.awt.Color(63, 82, 181));
        DeplacementBoutonHaut.setText("^");
        DeplacementBoutonHaut.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        DeplacementBoutonHaut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeplacementBoutonHaut.setFocusable(false);
        DeplacementBoutonHaut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeplacementBoutonHautMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeplacementBoutonHautMouseEntered(evt);
            }
        });
        DeplacementBoutonHaut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeplacementBoutonHautActionPerformed(evt);
            }
        });

        DeplacementBoutonBas.setBackground(new java.awt.Color(255, 255, 255));
        DeplacementBoutonBas.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        DeplacementBoutonBas.setForeground(new java.awt.Color(63, 82, 181));
        DeplacementBoutonBas.setText("v");
        DeplacementBoutonBas.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        DeplacementBoutonBas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeplacementBoutonBas.setFocusable(false);
        DeplacementBoutonBas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeplacementBoutonBasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeplacementBoutonBasMouseExited(evt);
            }
        });
        DeplacementBoutonBas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeplacementBoutonBasActionPerformed(evt);
            }
        });

        DeplacementBoutonDroite.setBackground(new java.awt.Color(255, 255, 255));
        DeplacementBoutonDroite.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        DeplacementBoutonDroite.setForeground(new java.awt.Color(63, 82, 181));
        DeplacementBoutonDroite.setText(">");
        DeplacementBoutonDroite.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        DeplacementBoutonDroite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeplacementBoutonDroite.setFocusable(false);
        DeplacementBoutonDroite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeplacementBoutonDroiteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeplacementBoutonDroiteMouseExited(evt);
            }
        });
        DeplacementBoutonDroite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeplacementBoutonDroiteActionPerformed(evt);
            }
        });

        DeplacementBoutonGauche.setBackground(new java.awt.Color(255, 255, 255));
        DeplacementBoutonGauche.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        DeplacementBoutonGauche.setForeground(new java.awt.Color(63, 82, 181));
        DeplacementBoutonGauche.setText("<");
        DeplacementBoutonGauche.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        DeplacementBoutonGauche.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeplacementBoutonGauche.setFocusable(false);
        DeplacementBoutonGauche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeplacementBoutonGaucheMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeplacementBoutonGaucheMouseExited(evt);
            }
        });
        DeplacementBoutonGauche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeplacementBoutonGaucheActionPerformed(evt);
            }
        });

        SupprimerBouton.setBackground(new java.awt.Color(255, 255, 255));
        SupprimerBouton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SupprimerBouton.setForeground(new java.awt.Color(63, 82, 181));
        SupprimerBouton.setText("Supprimer");
        SupprimerBouton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        SupprimerBouton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SupprimerBouton.setFocusable(false);
        SupprimerBouton.setMaximumSize(new java.awt.Dimension(125, 26));
        SupprimerBouton.setMinimumSize(new java.awt.Dimension(125, 26));
        SupprimerBouton.setPreferredSize(new java.awt.Dimension(125, 26));
        SupprimerBouton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SupprimerBoutonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupprimerBoutonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SupprimerBoutonMouseExited(evt);
            }
        });
        SupprimerBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerBoutonActionPerformed(evt);
            }
        });

        GrilleMagnetiqueBouton.setBackground(new java.awt.Color(255, 255, 255));
        GrilleMagnetiqueBouton.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        GrilleMagnetiqueBouton.setForeground(new java.awt.Color(63, 82, 181));
        GrilleMagnetiqueBouton.setText("Grille Magnétique");
        GrilleMagnetiqueBouton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        GrilleMagnetiqueBouton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GrilleMagnetiqueBouton.setFocusable(false);
        GrilleMagnetiqueBouton.setMaximumSize(new java.awt.Dimension(125, 26));
        GrilleMagnetiqueBouton.setMinimumSize(new java.awt.Dimension(125, 26));
        GrilleMagnetiqueBouton.setPreferredSize(new java.awt.Dimension(125, 26));
        GrilleMagnetiqueBouton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GrilleMagnetiqueBoutonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GrilleMagnetiqueBoutonMouseExited(evt);
            }
        });
        GrilleMagnetiqueBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrilleMagnetiqueBoutonActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBar(null);

        VuePilePanel.setBackground(new java.awt.Color(255, 255, 255));

        VuePileEntetePanel.setBackground(new java.awt.Color(63, 82, 181));
        VuePileEntetePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(189, 189, 189)));
        VuePileEntetePanel.setForeground(new java.awt.Color(255, 255, 255));

        TitreVuePileLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TitreVuePileLabel.setForeground(new java.awt.Color(255, 255, 255));
        TitreVuePileLabel.setText("Vue Pile");

        javax.swing.GroupLayout VuePileEntetePanelLayout = new javax.swing.GroupLayout(VuePileEntetePanel);
        VuePileEntetePanel.setLayout(VuePileEntetePanelLayout);
        VuePileEntetePanelLayout.setHorizontalGroup(
            VuePileEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VuePileEntetePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(TitreVuePileLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        VuePileEntetePanelLayout.setVerticalGroup(
            VuePileEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VuePileEntetePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitreVuePileLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        drawingPanelAffichagePile1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawingPanelAffichagePile1MousePressed(evt);
            }
        });

        drawingPanelAffichagePile1.init();

        javax.swing.GroupLayout drawingPanelAffichagePile1Layout = new javax.swing.GroupLayout(drawingPanelAffichagePile1);
        drawingPanelAffichagePile1.setLayout(drawingPanelAffichagePile1Layout);
        drawingPanelAffichagePile1Layout.setHorizontalGroup(
            drawingPanelAffichagePile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        drawingPanelAffichagePile1Layout.setVerticalGroup(
            drawingPanelAffichagePile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        ZLabel1.setText("Nombre Paquet");

        PaquetZTextbox1.setBackground(new java.awt.Color(245, 245, 245));
        PaquetZTextbox1.setForeground(new java.awt.Color(102, 102, 102));
        PaquetZTextbox1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        PaquetZTextbox1.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        PaquetZTextbox1.setEnabled(false);
        PaquetZTextbox1.setFocusable(false);
        PaquetZTextbox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PaquetZTextbox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PaquetZTextbox1FocusLost(evt);
            }
        });
        PaquetZTextbox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaquetZTextbox1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaquetZTextbox1MouseExited(evt);
            }
        });
        PaquetZTextbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetZTextbox1ActionPerformed(evt);
            }
        });

        ZLabel2.setText("Hauteur Pile");

        nbPaquetPileTextBox.setBackground(new java.awt.Color(245, 245, 245));
        nbPaquetPileTextBox.setForeground(new java.awt.Color(102, 102, 102));
        nbPaquetPileTextBox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        nbPaquetPileTextBox.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        nbPaquetPileTextBox.setEnabled(false);
        nbPaquetPileTextBox.setFocusable(false);
        nbPaquetPileTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nbPaquetPileTextBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nbPaquetPileTextBoxFocusLost(evt);
            }
        });
        nbPaquetPileTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nbPaquetPileTextBoxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nbPaquetPileTextBoxMouseExited(evt);
            }
        });
        nbPaquetPileTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbPaquetPileTextBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VuePilePanelLayout = new javax.swing.GroupLayout(VuePilePanel);
        VuePilePanel.setLayout(VuePilePanelLayout);
        VuePilePanelLayout.setHorizontalGroup(
            VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(VuePileEntetePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VuePilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawingPanelAffichagePile1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(VuePilePanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ZLabel1)
                            .addComponent(ZLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PaquetZTextbox1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                            .addComponent(nbPaquetPileTextBox))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        VuePilePanelLayout.setVerticalGroup(
            VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VuePilePanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(VuePileEntetePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanelAffichagePile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZLabel1)
                    .addComponent(nbPaquetPileTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VuePilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PaquetZTextbox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ZLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(VuePilePanel);

        ChargeuseScrollPan.setHorizontalScrollBar(null);
        ChargeuseScrollPan.setWheelScrollingEnabled(false);

        InfoChargeusePanel.setBackground(new java.awt.Color(236, 240, 241));

        InfoChargeuseEntetePanel.setBackground(new java.awt.Color(63, 82, 181));
        InfoChargeuseEntetePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(189, 189, 189)));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Chargeuse");

        javax.swing.GroupLayout InfoChargeuseEntetePanelLayout = new javax.swing.GroupLayout(InfoChargeuseEntetePanel);
        InfoChargeuseEntetePanel.setLayout(InfoChargeuseEntetePanelLayout);
        InfoChargeuseEntetePanelLayout.setHorizontalGroup(
            InfoChargeuseEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoChargeuseEntetePanelLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1)
                .addContainerGap(193, Short.MAX_VALUE))
        );
        InfoChargeuseEntetePanelLayout.setVerticalGroup(
            InfoChargeuseEntetePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoChargeuseEntetePanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        InfoChargeuseCorpsPanel.setBackground(new java.awt.Color(255, 255, 255));
        InfoChargeuseCorpsPanel.setForeground(new java.awt.Color(255, 255, 255));

        TitreChargeuseLabel.setForeground(new java.awt.Color(33, 33, 33));
        TitreChargeuseLabel.setText("Chargeuse");

        ChargeuseXLabel.setForeground(new java.awt.Color(117, 117, 117));
        ChargeuseXLabel.setText("X");

        ChargeuseXTextbox.setText("0.000");
        ChargeuseXTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        ChargeuseXTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ChargeuseXTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ChargeuseXTextboxFocusLost(evt);
            }
        });
        ChargeuseXTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChargeuseXTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChargeuseXTextboxMouseExited(evt);
            }
        });
        ChargeuseXTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChargeuseXTextboxActionPerformed(evt);
            }
        });
        ChargeuseXTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChargeuseXTextboxKeyReleased(evt);
            }
        });

        ChargeuseYLabel.setForeground(new java.awt.Color(117, 117, 117));
        ChargeuseYLabel.setText("Y");

        ChargeuseYTextbox.setText("0.000");
        ChargeuseYTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        ChargeuseYTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ChargeuseYTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ChargeuseYTextboxFocusLost(evt);
            }
        });
        ChargeuseYTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChargeuseYTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChargeuseYTextboxMouseExited(evt);
            }
        });
        ChargeuseYTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChargeuseYTextboxKeyReleased(evt);
            }
        });

        TitreBrasLabel.setForeground(new java.awt.Color(33, 33, 33));
        TitreBrasLabel.setText("Bras");

        BrasHauteurLabel.setForeground(new java.awt.Color(117, 117, 117));
        BrasHauteurLabel.setText("Hauteur");

        BrasHauteurTextbox.setText("0");
        BrasHauteurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasHauteurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasHauteurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasHauteurTextboxFocusLost(evt);
            }
        });
        BrasHauteurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasHauteurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasHauteurTextboxMouseExited(evt);
            }
        });
        BrasHauteurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasHauteurTextboxKeyReleased(evt);
            }
        });

        BrasAngleLabel.setForeground(new java.awt.Color(117, 117, 117));
        BrasAngleLabel.setText("Angle");

        BrasAngleTextbox.setText("0");
        BrasAngleTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasAngleTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasAngleTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasAngleTextboxFocusLost(evt);
            }
        });
        BrasAngleTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasAngleTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasAngleTextboxMouseExited(evt);
            }
        });
        BrasAngleTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasAngleTextboxKeyReleased(evt);
            }
        });

        ChargeuseLongueurLabel.setForeground(new java.awt.Color(117, 117, 117));
        ChargeuseLongueurLabel.setText("Longeur ");

        ChargeuseLargeurLabel.setForeground(new java.awt.Color(117, 117, 117));
        ChargeuseLargeurLabel.setText("Largeur");

        ChargeuseLargeurTextbox.setText("0");
        ChargeuseLargeurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        ChargeuseLargeurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ChargeuseLargeurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ChargeuseLargeurTextboxFocusLost(evt);
            }
        });
        ChargeuseLargeurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChargeuseLargeurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChargeuseLargeurTextboxMouseExited(evt);
            }
        });
        ChargeuseLargeurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChargeuseLargeurTextboxKeyReleased(evt);
            }
        });

        ChargeuseLongueurTextbox.setText("0");
        ChargeuseLongueurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        ChargeuseLongueurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ChargeuseLongueurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ChargeuseLongueurTextboxFocusLost(evt);
            }
        });
        ChargeuseLongueurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChargeuseLongueurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChargeuseLongueurTextboxMouseExited(evt);
            }
        });
        ChargeuseLongueurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChargeuseLongueurTextboxKeyReleased(evt);
            }
        });

        BrasLongueurLabel1.setForeground(new java.awt.Color(117, 117, 117));
        BrasLongueurLabel1.setText("Longeur ");

        BrasLargeurLabel1.setForeground(new java.awt.Color(117, 117, 117));
        BrasLargeurLabel1.setText("Largeur");

        BrasLongueurTextbox.setText("0");
        BrasLongueurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasLongueurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasLongueurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasLongueurTextboxFocusLost(evt);
            }
        });
        BrasLongueurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasLongueurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasLongueurTextboxMouseExited(evt);
            }
        });
        BrasLongueurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasLongueurTextboxKeyReleased(evt);
            }
        });

        BrasLargeurTextbox.setText("0");
        BrasLargeurTextbox.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasLargeurTextbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasLargeurTextboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasLargeurTextboxFocusLost(evt);
            }
        });
        BrasLargeurTextbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasLargeurTextboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasLargeurTextboxMouseExited(evt);
            }
        });
        BrasLargeurTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasLargeurTextboxKeyReleased(evt);
            }
        });

        LibellePositionXBrasChargeuse.setForeground(new java.awt.Color(117, 117, 117));
        LibellePositionXBrasChargeuse.setText("X");

        BrasChargeusePositionX.setBackground(new java.awt.Color(245, 245, 245));
        BrasChargeusePositionX.setText("0");
        BrasChargeusePositionX.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasChargeusePositionX.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BrasChargeusePositionX.setEnabled(false);
        BrasChargeusePositionX.setFocusable(false);
        BrasChargeusePositionX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasChargeusePositionXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasChargeusePositionXFocusLost(evt);
            }
        });
        BrasChargeusePositionX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasChargeusePositionXMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasChargeusePositionXMouseExited(evt);
            }
        });
        BrasChargeusePositionX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasChargeusePositionXKeyReleased(evt);
            }
        });

        LibellePositionYBrasChargeuse.setForeground(new java.awt.Color(117, 117, 117));
        LibellePositionYBrasChargeuse.setText("Y");

        BrasChargeusePositionY.setBackground(new java.awt.Color(245, 245, 245));
        BrasChargeusePositionY.setText("0");
        BrasChargeusePositionY.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(189, 189, 189)));
        BrasChargeusePositionY.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BrasChargeusePositionY.setEnabled(false);
        BrasChargeusePositionY.setFocusable(false);
        BrasChargeusePositionY.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BrasChargeusePositionYFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BrasChargeusePositionYFocusLost(evt);
            }
        });
        BrasChargeusePositionY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BrasChargeusePositionYMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BrasChargeusePositionYMouseExited(evt);
            }
        });
        BrasChargeusePositionY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BrasChargeusePositionYKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout InfoChargeuseCorpsPanelLayout = new javax.swing.GroupLayout(InfoChargeuseCorpsPanel);
        InfoChargeuseCorpsPanel.setLayout(InfoChargeuseCorpsPanelLayout);
        InfoChargeuseCorpsPanelLayout.setHorizontalGroup(
            InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                        .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                .addComponent(ChargeuseYLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChargeuseYTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChargeuseLargeurLabel))
                            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                .addComponent(BrasAngleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BrasAngleTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(ChargeuseLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(ChargeuseLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)))
                                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(LibellePositionXBrasChargeuse)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BrasChargeusePositionY, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(LibellePositionYBrasChargeuse)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BrasChargeusePositionX, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(BrasLongueurLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BrasLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                        .addComponent(BrasLargeurLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BrasLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BrasHauteurLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BrasHauteurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                        .addComponent(ChargeuseXLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                                .addComponent(ChargeuseXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChargeuseLongueurLabel))
                            .addComponent(TitreChargeuseLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TitreBrasLabel)
                        .addGap(126, 126, 126))))
        );
        InfoChargeuseCorpsPanelLayout.setVerticalGroup(
            InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoChargeuseCorpsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitreChargeuseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitreBrasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChargeuseXLabel)
                    .addComponent(ChargeuseXTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChargeuseLongueurLabel)
                    .addComponent(ChargeuseLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrasLongueurLabel1)
                    .addComponent(BrasLongueurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LibellePositionXBrasChargeuse)
                    .addComponent(BrasChargeusePositionY, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChargeuseYLabel)
                    .addComponent(ChargeuseYTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChargeuseLargeurLabel)
                    .addComponent(ChargeuseLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrasLargeurLabel1)
                    .addComponent(BrasLargeurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LibellePositionYBrasChargeuse)
                    .addComponent(BrasChargeusePositionX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoChargeuseCorpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BrasAngleLabel)
                    .addComponent(BrasAngleTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrasHauteurLabel)
                    .addComponent(BrasHauteurTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout InfoChargeusePanelLayout = new javax.swing.GroupLayout(InfoChargeusePanel);
        InfoChargeusePanel.setLayout(InfoChargeusePanelLayout);
        InfoChargeusePanelLayout.setHorizontalGroup(
            InfoChargeusePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InfoChargeuseEntetePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(InfoChargeuseCorpsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        InfoChargeusePanelLayout.setVerticalGroup(
            InfoChargeusePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoChargeusePanelLayout.createSequentialGroup()
                .addComponent(InfoChargeuseEntetePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(InfoChargeuseCorpsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ChargeuseScrollPan.setViewportView(InfoChargeusePanel);

        AjouterButton.setBackground(new java.awt.Color(255, 255, 255));
        AjouterButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        AjouterButton.setForeground(new java.awt.Color(63, 82, 181));
        AjouterButton.setText("Ajouter");
        AjouterButton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(63, 82, 181)));
        AjouterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AjouterButton.setFocusable(false);
        AjouterButton.setMaximumSize(new java.awt.Dimension(125, 26));
        AjouterButton.setMinimumSize(new java.awt.Dimension(125, 26));
        AjouterButton.setPreferredSize(new java.awt.Dimension(125, 26));
        AjouterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AjouterButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AjouterButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AjouterButtonMouseExited(evt);
            }
        });

        drawingPanelCoursABois1.init();

        javax.swing.GroupLayout drawingPanelCoursABois1Layout = new javax.swing.GroupLayout(drawingPanelCoursABois1);
        drawingPanelCoursABois1.setLayout(drawingPanelCoursABois1Layout);
        drawingPanelCoursABois1Layout.setHorizontalGroup(
            drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelCoursABois1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                        .addComponent(ChargeuseScrollPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(GrilleMagnetiqueBouton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SupprimerBouton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AjouterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(CoordSourisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeplacementBoutonGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 686, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeplacementBoutonHaut, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                        .addComponent(DeplacementBoutonBas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeplacementBoutonDroite, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                        .addComponent(ZoomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DezoomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(InfoPaquetFenetrePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        drawingPanelCoursABois1Layout.setVerticalGroup(
            drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InfoPaquetFenetrePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                        .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(DeplacementBoutonHaut, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(DeplacementBoutonBas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(DeplacementBoutonDroite, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(DeplacementBoutonGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(drawingPanelCoursABois1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ZoomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DezoomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(drawingPanelCoursABois1Layout.createSequentialGroup()
                                .addComponent(SupprimerBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AjouterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GrilleMagnetiqueBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CoordSourisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChargeuseScrollPan, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(144, 144, 144))
        );

        SupprimerBouton.setVisible(false);
        GrilleMagnetiqueBouton.getAccessibleContext().setAccessibleName("boutonGrilleMagnetique");

        MainPanel.add(drawingPanelCoursABois1, java.awt.BorderLayout.CENTER);

        PanneauBandeau.setBackground(new java.awt.Color(244, 68, 54));

        LibelleBandeau.setForeground(new java.awt.Color(255, 255, 255));

        BoutonFermerBandeau.setBackground(new java.awt.Color(244, 68, 54));
        BoutonFermerBandeau.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        BoutonFermerBandeau.setForeground(new java.awt.Color(239, 239, 239));
        BoutonFermerBandeau.setText("X");
        BoutonFermerBandeau.setBorder(null);
        BoutonFermerBandeau.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BoutonFermerBandeau.setFocusPainted(false);
        BoutonFermerBandeau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BoutonFermerBandeauMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanneauBandeauLayout = new javax.swing.GroupLayout(PanneauBandeau);
        PanneauBandeau.setLayout(PanneauBandeauLayout);
        PanneauBandeauLayout.setHorizontalGroup(
            PanneauBandeauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanneauBandeauLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LibelleBandeau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1227, Short.MAX_VALUE)
                .addComponent(BoutonFermerBandeau)
                .addContainerGap())
        );
        PanneauBandeauLayout.setVerticalGroup(
            PanneauBandeauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanneauBandeauLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanneauBandeauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LibelleBandeau)
                    .addComponent(BoutonFermerBandeau))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainPanel.add(PanneauBandeau, java.awt.BorderLayout.PAGE_START);

        jMenuBar1.setBackground(new java.awt.Color(63, 82, 181));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(189, 189, 189)));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(68, 50));

        FileMenu.setBackground(new java.awt.Color(63, 82, 181));
        FileMenu.setForeground(new java.awt.Color(255, 255, 255));
        FileMenu.setText("File");
        FileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        LoadFileButton.setText("Ouvrir");
        LoadFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadFileButtonActionPerformed(evt);
            }
        });
        FileMenu.add(LoadFileButton);

        SaveButton.setText("Enregistrer");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });
        FileMenu.add(SaveButton);

        Export3DButton.setText("Exporter 3D");
        Export3DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export3DButtonActionPerformed(evt);
            }
        });
        FileMenu.add(Export3DButton);

        QuitButton.setText("Quitter");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });
        FileMenu.add(QuitButton);

        jMenuBar1.add(FileMenu);

        EditMenu.setBackground(new java.awt.Color(63, 82, 181));
        EditMenu.setForeground(new java.awt.Color(255, 255, 255));
        EditMenu.setText("Edit");
        EditMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ReinitialiserBouton.setText("Réinitialiser");
        ReinitialiserBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReinitialiserBoutonActionPerformed(evt);
            }
        });
        EditMenu.add(ReinitialiserBouton);
        EditMenu.add(jSeparator1);

        UndoButton.setText("Annuler");
        UndoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoButtonActionPerformed(evt);
            }
        });
        EditMenu.add(UndoButton);

        RepeatButton.setText("Repeter");
        RepeatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepeatButtonActionPerformed(evt);
            }
        });
        EditMenu.add(RepeatButton);

        jMenuBar1.add(EditMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UndoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoButtonActionPerformed
        if (!this.anciensEtats.isEmpty()) {
            VirtuBoisControleur futureVersion = new VirtuBoisControleur(this.controleur);
            this.futursEtats.add(futureVersion);
            this.controleur = this.anciensEtats.remove(this.anciensEtats.size() - VALEUR_UN);
            this.ajusterDonneesChargeuseUndoRedo();
            this.afficherInformationPaquetSelectionne();
        }
        
        this.drawingPanelCoursABois1.initiateBindingKeyStroke();
        this.fixerModeApplication(ModeApplication.SELECTION);
        this.repeindreCourABois();
        this.repaintDrawingPannelPile();
    }//GEN-LAST:event_UndoButtonActionPerformed

    private void RepeatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepeatButtonActionPerformed
        if (!this.futursEtats.isEmpty()) {
            VirtuBoisControleur ancienneVersion = new VirtuBoisControleur(this.controleur);
            this.anciensEtats.add(ancienneVersion);
            this.controleur = this.futursEtats.remove(this.futursEtats.size() - VALEUR_UN);
            this.ajusterDonneesChargeuseUndoRedo();
            this.afficherInformationPaquetSelectionne();
        }
        
        this.drawingPanelCoursABois1.initiateBindingKeyStroke();
        this.fixerModeApplication(ModeApplication.SELECTION);
        this.repeindreCourABois();
        this.repaintDrawingPannelPile();
    }//GEN-LAST:event_RepeatButtonActionPerformed

    private void QuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitButtonActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved

    }//GEN-LAST:event_formMouseMoved

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        SerialisationFichier serialisationFichier = new SerialisationFichier(this, this.controleur);
        serialisationFichier.sauvegarderControleur();
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void LoadFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadFileButtonActionPerformed
        SerialisationFichier serialisationFichier = new SerialisationFichier();
        
        this.controleur = serialisationFichier.chargerControleur();
        this.drawingPanelCoursABois1.initiateBindingKeyStroke();
        this.fixerModeApplication(ModeApplication.SELECTION);
        this.repeindreCourABois();
        this.repaintDrawingPannelPile();
    }//GEN-LAST:event_LoadFileButtonActionPerformed

    private void drawingPanelCoursABois1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelCoursABois1MouseDragged

    }//GEN-LAST:event_drawingPanelCoursABois1MouseDragged

    private void SupprimerBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerBoutonActionPerformed
        this.ajouterAncienneVersion();
        this.SupprimerBouton.setVisible(false);
        this.controleur.gestionSuppressionPaquet();
        this.fixerModeApplicationAjoutOuSelection();
        this.reinitialiserCouleurChampErreur();
        this.cacherPanneauBandeau();
        this.viderTextBox();
        this.repeindreCourABois();
        this.repaintDrawingPannelPile();
    }//GEN-LAST:event_SupprimerBoutonActionPerformed

    private void SupprimerBoutonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerBoutonMouseEntered
        this.appliquerCouleurBouton(this.SupprimerBouton);
    }//GEN-LAST:event_SupprimerBoutonMouseEntered

    private void SupprimerBoutonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerBoutonMouseExited
        this.reinitialiserCouleurBouton(this.SupprimerBouton);
    }//GEN-LAST:event_SupprimerBoutonMouseExited

    private void SupprimerBoutonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerBoutonMouseClicked

    }//GEN-LAST:event_SupprimerBoutonMouseClicked

    private void DeplacementBoutonGaucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeplacementBoutonGaucheActionPerformed
        this.drawingPanelCoursABois1.deplacerMapGauche();
    }//GEN-LAST:event_DeplacementBoutonGaucheActionPerformed

    private void DeplacementBoutonDroiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeplacementBoutonDroiteActionPerformed
        this.drawingPanelCoursABois1.deplacerMapDroite();
    }//GEN-LAST:event_DeplacementBoutonDroiteActionPerformed

    private void DeplacementBoutonBasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeplacementBoutonBasActionPerformed
        this.drawingPanelCoursABois1.deplacerMapBas();
    }//GEN-LAST:event_DeplacementBoutonBasActionPerformed

    private void DeplacementBoutonHautActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeplacementBoutonHautActionPerformed
        this.drawingPanelCoursABois1.deplacerMapHaut();
    }//GEN-LAST:event_DeplacementBoutonHautActionPerformed

    private void BrasAngleTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasAngleTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.BrasAngleTextbox);
    }//GEN-LAST:event_BrasAngleTextboxMouseEntered

    private void BrasAngleTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasAngleTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.BrasAngleTextbox);
    }//GEN-LAST:event_BrasAngleTextboxMouseExited

    private void BrasAngleTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasAngleTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.BrasAngleTextbox);
    }//GEN-LAST:event_BrasAngleTextboxFocusLost

    private void BrasAngleTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasAngleTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.BrasAngleTextbox);
    }//GEN-LAST:event_BrasAngleTextboxFocusGained

    private void BrasHauteurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasHauteurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.BrasHauteurTextbox);
    }//GEN-LAST:event_BrasHauteurTextboxMouseExited

    private void BrasHauteurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasHauteurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.BrasHauteurTextbox);
    }//GEN-LAST:event_BrasHauteurTextboxMouseEntered

    private void BrasHauteurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasHauteurTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.BrasHauteurTextbox);
    }//GEN-LAST:event_BrasHauteurTextboxFocusLost

    private void BrasHauteurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasHauteurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.BrasHauteurTextbox);
    }//GEN-LAST:event_BrasHauteurTextboxFocusGained

    private void ChargeuseYTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseYTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseYTextbox);
    }//GEN-LAST:event_ChargeuseYTextboxMouseExited

    private void ChargeuseYTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseYTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.ChargeuseYTextbox);
    }//GEN-LAST:event_ChargeuseYTextboxMouseEntered

    private void ChargeuseYTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseYTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.ChargeuseYTextbox);
    }//GEN-LAST:event_ChargeuseYTextboxFocusLost

    private void ChargeuseYTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseYTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.ChargeuseYTextbox);
    }//GEN-LAST:event_ChargeuseYTextboxFocusGained

    private void ChargeuseXTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxActionPerformed

    }//GEN-LAST:event_ChargeuseXTextboxActionPerformed

    private void ChargeuseXTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.ChargeuseXTextbox);
    }//GEN-LAST:event_ChargeuseXTextboxMouseEntered

    private void ChargeuseXTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseXTextbox);
    }//GEN-LAST:event_ChargeuseXTextboxMouseExited

    private void ChargeuseXTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.ChargeuseXTextbox);
    }//GEN-LAST:event_ChargeuseXTextboxFocusLost

    private void ChargeuseXTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.ChargeuseXTextbox);
    }//GEN-LAST:event_ChargeuseXTextboxFocusGained

    private void SourisYTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SourisYTextboxActionPerformed

    }//GEN-LAST:event_SourisYTextboxActionPerformed

    private void SourisYTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SourisYTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.SourisYTextbox);
    }//GEN-LAST:event_SourisYTextboxMouseEntered

    private void SourisYTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SourisYTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.SourisYTextbox);
    }//GEN-LAST:event_SourisYTextboxMouseExited

    private void SourisYTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SourisYTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.SourisYTextbox);
    }//GEN-LAST:event_SourisYTextboxFocusLost

    private void SourisYTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SourisYTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.SourisYTextbox);
    }//GEN-LAST:event_SourisYTextboxFocusGained

    private void SourisXTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SourisXTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.SourisXTextbox);
    }//GEN-LAST:event_SourisXTextboxMouseEntered

    private void SourisXTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SourisXTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.SourisXTextbox);
    }//GEN-LAST:event_SourisXTextboxMouseExited

    private void SourisXTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SourisXTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.SourisXTextbox);
    }//GEN-LAST:event_SourisXTextboxFocusLost

    private void SourisXTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SourisXTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.SourisXTextbox);
    }//GEN-LAST:event_SourisXTextboxFocusGained

    private void PaquetLargeurTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxActionPerformed

    }//GEN-LAST:event_PaquetLargeurTextboxActionPerformed

    private void PaquetLargeurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetLargeurTextbox);
    }//GEN-LAST:event_PaquetLargeurTextboxMouseEntered

    private void PaquetLargeurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetLargeurTextbox);
    }//GEN-LAST:event_PaquetLargeurTextboxMouseExited

    private void PaquetLargeurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetLargeurTextbox);
    }//GEN-LAST:event_PaquetLargeurTextboxFocusLost

    private void PaquetLargeurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetLargeurTextbox);
    }//GEN-LAST:event_PaquetLargeurTextboxFocusGained

    private void PaquetLongueurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetLongueurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetLongueurTextbox);
    }//GEN-LAST:event_PaquetLongueurTextboxMouseEntered

    private void PaquetLongueurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetLongueurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetLongueurTextbox);
    }//GEN-LAST:event_PaquetLongueurTextboxMouseExited

    private void PaquetLongueurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetLongueurTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetLongueurTextbox);
    }//GEN-LAST:event_PaquetLongueurTextboxFocusLost

    private void PaquetLongueurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetLongueurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetLongueurTextbox);
    }//GEN-LAST:event_PaquetLongueurTextboxFocusGained

    private void PaquetAngleTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetAngleTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetAngleTextbox);
    }//GEN-LAST:event_PaquetAngleTextboxMouseEntered

    private void PaquetAngleTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetAngleTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetAngleTextbox);
    }//GEN-LAST:event_PaquetAngleTextboxMouseExited

    private void PaquetAngleTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetAngleTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetAngleTextbox);
    }//GEN-LAST:event_PaquetAngleTextboxFocusLost

    private void PaquetAngleTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetAngleTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetAngleTextbox);
    }//GEN-LAST:event_PaquetAngleTextboxFocusGained

    private void PaquetDateProductionTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetDateProductionTextboxActionPerformed

    }//GEN-LAST:event_PaquetDateProductionTextboxActionPerformed

    private void PaquetDateProductionTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetDateProductionTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetDateProductionTextbox);
    }//GEN-LAST:event_PaquetDateProductionTextboxMouseEntered

    private void PaquetDateProductionTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetDateProductionTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetDateProductionTextbox);
    }//GEN-LAST:event_PaquetDateProductionTextboxMouseExited

    private void PaquetDateProductionTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetDateProductionTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetDateProductionTextbox);
    }//GEN-LAST:event_PaquetDateProductionTextboxFocusLost

    private void PaquetDateProductionTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetDateProductionTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetDateProductionTextbox);
    }//GEN-LAST:event_PaquetDateProductionTextboxFocusGained

    private void PaquetProduitTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxActionPerformed
        
    }//GEN-LAST:event_PaquetProduitTextboxActionPerformed

    private void PaquetProduitTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetProduitTextbox);
    }//GEN-LAST:event_PaquetProduitTextboxMouseEntered

    private void PaquetProduitTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetProduitTextbox);
    }//GEN-LAST:event_PaquetProduitTextboxMouseExited

    private void PaquetProduitTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetProduitTextbox);
    }//GEN-LAST:event_PaquetProduitTextboxFocusLost

    private void PaquetProduitTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetProduitTextbox);
    }//GEN-LAST:event_PaquetProduitTextboxFocusGained

    private void PaquetCodeBarreTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetCodeBarreTextboxActionPerformed
     
    }//GEN-LAST:event_PaquetCodeBarreTextboxActionPerformed

    private void PaquetCodeBarreTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetCodeBarreTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetCodeBarreTextbox);
    }//GEN-LAST:event_PaquetCodeBarreTextboxMouseEntered

    private void PaquetCodeBarreTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetCodeBarreTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetCodeBarreTextbox);
    }//GEN-LAST:event_PaquetCodeBarreTextboxMouseExited

    private void PaquetCodeBarreTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetCodeBarreTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetCodeBarreTextbox);
    }//GEN-LAST:event_PaquetCodeBarreTextboxFocusLost

    private void PaquetCodeBarreTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetCodeBarreTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetCodeBarreTextbox);
    }//GEN-LAST:event_PaquetCodeBarreTextboxFocusGained

    private void PaquetYTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetYTextboxActionPerformed
      
    }//GEN-LAST:event_PaquetYTextboxActionPerformed

    private void PaquetYTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetYTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetYTextbox);
    }//GEN-LAST:event_PaquetYTextboxMouseEntered

    private void PaquetYTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetYTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetYTextbox);
    }//GEN-LAST:event_PaquetYTextboxMouseExited

    private void PaquetYTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetYTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetYTextbox);
    }//GEN-LAST:event_PaquetYTextboxFocusLost

    private void PaquetYTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetYTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetYTextbox);
    }//GEN-LAST:event_PaquetYTextboxFocusGained

    private void PaquetXTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetXTextboxActionPerformed
        
    }//GEN-LAST:event_PaquetXTextboxActionPerformed

    private void PaquetXTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetXTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetXTextbox);
    }//GEN-LAST:event_PaquetXTextboxMouseEntered

    private void PaquetXTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetXTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetXTextbox);
    }//GEN-LAST:event_PaquetXTextboxMouseExited

    private void PaquetXTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetXTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetXTextbox);
    }//GEN-LAST:event_PaquetXTextboxFocusLost

    private void PaquetXTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetXTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetXTextbox);
    }//GEN-LAST:event_PaquetXTextboxFocusGained

    private void PaquetHauteurTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxActionPerformed
       
    }//GEN-LAST:event_PaquetHauteurTextboxActionPerformed

    private void PaquetHauteurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetHauteurTextbox);
    }//GEN-LAST:event_PaquetHauteurTextboxMouseEntered

    private void PaquetHauteurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetHauteurTextbox);
    }//GEN-LAST:event_PaquetHauteurTextboxMouseExited

    private void PaquetHauteurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetHauteurTextbox);
    }//GEN-LAST:event_PaquetHauteurTextboxFocusLost

    private void PaquetHauteurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetHauteurTextbox);
    }//GEN-LAST:event_PaquetHauteurTextboxFocusGained

    private void DezoomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DezoomerButtonActionPerformed
       this.drawingPanelCoursABois1.gestionBoutonZoom(-1);
    }//GEN-LAST:event_DezoomerButtonActionPerformed

    private void DezoomerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DezoomerButtonMouseEntered
        appliquerCouleurBouton(this.DezoomerButton);
    }//GEN-LAST:event_DezoomerButtonMouseEntered

    private void DezoomerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DezoomerButtonMouseExited
        reinitialiserCouleurBouton(this.DezoomerButton);
    }//GEN-LAST:event_DezoomerButtonMouseExited

    private void ZoomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomerButtonActionPerformed
        this.drawingPanelCoursABois1.gestionBoutonZoom(1);
    }//GEN-LAST:event_ZoomerButtonActionPerformed

    private void ZoomerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZoomerButtonMouseEntered
        appliquerCouleurBouton(this.ZoomerButton);
    }//GEN-LAST:event_ZoomerButtonMouseEntered

    private void ZoomerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZoomerButtonMouseExited
        reinitialiserCouleurBouton(this.ZoomerButton);
    }//GEN-LAST:event_ZoomerButtonMouseExited

    private void GrilleMagnetiqueBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrilleMagnetiqueBoutonActionPerformed
        this.drawingPanelCoursABois1.changerModeGrilleMagnetique();
    }//GEN-LAST:event_GrilleMagnetiqueBoutonActionPerformed

    private void PaquetZTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetZTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetZTextbox);
    }//GEN-LAST:event_PaquetZTextboxFocusGained

    private void PaquetZTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetZTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetZTextbox);
    }//GEN-LAST:event_PaquetZTextboxFocusLost

    private void PaquetZTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetZTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetZTextbox);
    }//GEN-LAST:event_PaquetZTextboxMouseExited

    private void PaquetZTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetZTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetZTextbox);
    }//GEN-LAST:event_PaquetZTextboxMouseEntered

    private void PaquetZTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetZTextboxActionPerformed
        
    }//GEN-LAST:event_PaquetZTextboxActionPerformed

    private void PaquetZTextbox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetZTextbox1FocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetZTextbox1);
    }//GEN-LAST:event_PaquetZTextbox1FocusGained

    private void PaquetZTextbox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetZTextbox1FocusLost
        reinitialiserCouleurBordureChamp(this.PaquetZTextbox1);
    }//GEN-LAST:event_PaquetZTextbox1FocusLost

    private void PaquetZTextbox1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetZTextbox1MouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetZTextbox1);
    }//GEN-LAST:event_PaquetZTextbox1MouseExited

    private void PaquetZTextbox1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetZTextbox1MouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetZTextbox1);
    }//GEN-LAST:event_PaquetZTextbox1MouseEntered

    private void PaquetZTextbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetZTextbox1ActionPerformed
 
    }//GEN-LAST:event_PaquetZTextbox1ActionPerformed

    private void nbPaquetPileTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nbPaquetPileTextBoxFocusGained
        appliquerCouleurBordureChampSelectionner(this.nbPaquetPileTextBox);
    }//GEN-LAST:event_nbPaquetPileTextBoxFocusGained

    private void nbPaquetPileTextBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nbPaquetPileTextBoxFocusLost
        reinitialiserCouleurBordureChamp(this.nbPaquetPileTextBox);
    }//GEN-LAST:event_nbPaquetPileTextBoxFocusLost

    private void nbPaquetPileTextBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nbPaquetPileTextBoxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.nbPaquetPileTextBox);
    }//GEN-LAST:event_nbPaquetPileTextBoxMouseExited

    private void nbPaquetPileTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nbPaquetPileTextBoxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.nbPaquetPileTextBox);
    }//GEN-LAST:event_nbPaquetPileTextBoxMouseEntered

    private void nbPaquetPileTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbPaquetPileTextBoxActionPerformed
    
    }//GEN-LAST:event_nbPaquetPileTextBoxActionPerformed

    private void PaquetEtageTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetEtageTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.PaquetEtageTextbox);
    }//GEN-LAST:event_PaquetEtageTextboxFocusGained

    private void PaquetEtageTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PaquetEtageTextboxFocusLost
        reinitialiserCouleurBordureChamp(this.PaquetEtageTextbox);
    }//GEN-LAST:event_PaquetEtageTextboxFocusLost

    private void PaquetEtageTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetEtageTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.PaquetEtageTextbox);
    }//GEN-LAST:event_PaquetEtageTextboxMouseExited

    private void PaquetEtageTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaquetEtageTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.PaquetEtageTextbox);
    }//GEN-LAST:event_PaquetEtageTextboxMouseEntered

    private void PaquetEtageTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetEtageTextboxActionPerformed
     
    }//GEN-LAST:event_PaquetEtageTextboxActionPerformed

    private void drawingPanelAffichagePile1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelAffichagePile1MousePressed

    }//GEN-LAST:event_drawingPanelAffichagePile1MousePressed

    private void BoutonFermerBandeauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoutonFermerBandeauMouseClicked
        this.cacherPanneauBandeau();
    }//GEN-LAST:event_BoutonFermerBandeauMouseClicked

    private void GrilleMagnetiqueBoutonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrilleMagnetiqueBoutonMouseEntered
        this.appliquerCouleurBoutonToggle(this.GrilleMagnetiqueBouton);
    }//GEN-LAST:event_GrilleMagnetiqueBoutonMouseEntered

    private void GrilleMagnetiqueBoutonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrilleMagnetiqueBoutonMouseExited
        this.reinitialiserCouleurBoutonToggle(this.GrilleMagnetiqueBouton);
    }//GEN-LAST:event_GrilleMagnetiqueBoutonMouseExited

    private void DeplacementBoutonBasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonBasMouseEntered
        this.appliquerCouleurBouton(this.DeplacementBoutonBas);
    }//GEN-LAST:event_DeplacementBoutonBasMouseEntered

    private void DeplacementBoutonBasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonBasMouseExited
        this.reinitialiserCouleurBouton(this.DeplacementBoutonBas);
    }//GEN-LAST:event_DeplacementBoutonBasMouseExited

    private void DeplacementBoutonDroiteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonDroiteMouseEntered
        this.appliquerCouleurBouton(this.DeplacementBoutonDroite);
    }//GEN-LAST:event_DeplacementBoutonDroiteMouseEntered

    private void DeplacementBoutonDroiteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonDroiteMouseExited
        this.reinitialiserCouleurBouton(this.DeplacementBoutonDroite);
    }//GEN-LAST:event_DeplacementBoutonDroiteMouseExited

    private void DeplacementBoutonHautMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonHautMouseEntered
        this.appliquerCouleurBouton(this.DeplacementBoutonHaut);
    }//GEN-LAST:event_DeplacementBoutonHautMouseEntered

    private void DeplacementBoutonHautMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonHautMouseExited
        this.reinitialiserCouleurBouton(this.DeplacementBoutonHaut);
    }//GEN-LAST:event_DeplacementBoutonHautMouseExited

    private void DeplacementBoutonGaucheMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonGaucheMouseEntered
        this.appliquerCouleurBouton(this.DeplacementBoutonGauche);
    }//GEN-LAST:event_DeplacementBoutonGaucheMouseEntered

    private void DeplacementBoutonGaucheMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeplacementBoutonGaucheMouseExited
        this.reinitialiserCouleurBouton(this.DeplacementBoutonGauche);
    }//GEN-LAST:event_DeplacementBoutonGaucheMouseExited
        
    private void Export3DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export3DButtonActionPerformed
        SerialisationFichier3D serialisationFichier3D = new SerialisationFichier3D(this, this.controleur);
        serialisationFichier3D.exporter();
    }//GEN-LAST:event_Export3DButtonActionPerformed

    private void ChargeuseLargeurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseLargeurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.ChargeuseLargeurTextbox);
    }//GEN-LAST:event_ChargeuseLargeurTextboxFocusGained

    private void ChargeuseLargeurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseLargeurTextboxFocusLost
        reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseLargeurTextbox);
    }//GEN-LAST:event_ChargeuseLargeurTextboxFocusLost

    private void ChargeuseLargeurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseLargeurTextboxMouseExited
       reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseLargeurTextbox);
    }//GEN-LAST:event_ChargeuseLargeurTextboxMouseExited

    private void ChargeuseLargeurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseLargeurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.ChargeuseLargeurTextbox);
    }//GEN-LAST:event_ChargeuseLargeurTextboxMouseEntered

    private void ChargeuseLongueurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseLongueurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.ChargeuseLongueurTextbox);
    }//GEN-LAST:event_ChargeuseLongueurTextboxFocusGained

    private void ChargeuseLongueurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChargeuseLongueurTextboxFocusLost
        reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseLongueurTextbox);
    }//GEN-LAST:event_ChargeuseLongueurTextboxFocusLost

    private void ChargeuseLongueurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseLongueurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.ChargeuseLongueurTextbox);
    }//GEN-LAST:event_ChargeuseLongueurTextboxMouseExited

    private void ChargeuseLongueurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeuseLongueurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.ChargeuseLongueurTextbox);
    }//GEN-LAST:event_ChargeuseLongueurTextboxMouseEntered

    private void BrasLongueurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasLongueurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.BrasLongueurTextbox);
    }//GEN-LAST:event_BrasLongueurTextboxFocusGained

    private void BrasLongueurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasLongueurTextboxFocusLost
        reinitialiserCouleurBordureChampSourisQuitte(this.BrasLongueurTextbox);
    }//GEN-LAST:event_BrasLongueurTextboxFocusLost

    private void BrasLongueurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasLongueurTextboxMouseExited
        reinitialiserCouleurBordureChampSourisQuitte(this.BrasLongueurTextbox);
    }//GEN-LAST:event_BrasLongueurTextboxMouseExited

    private void BrasLongueurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasLongueurTextboxMouseEntered
        appliquerCouleurBordureChampSelectionner(this.BrasLongueurTextbox);
    }//GEN-LAST:event_BrasLongueurTextboxMouseEntered

    private void BrasLargeurTextboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasLargeurTextboxFocusGained
        appliquerCouleurBordureChampSelectionner(this.BrasLargeurTextbox);
    }//GEN-LAST:event_BrasLargeurTextboxFocusGained

    private void BrasLargeurTextboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasLargeurTextboxFocusLost
        reinitialiserCouleurBordureChampSourisQuitte(this.BrasLargeurTextbox);
    }//GEN-LAST:event_BrasLargeurTextboxFocusLost

    private void BrasLargeurTextboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasLargeurTextboxMouseExited
       reinitialiserCouleurBordureChampSourisQuitte(this.BrasLargeurTextbox);
    }//GEN-LAST:event_BrasLargeurTextboxMouseExited

    private void BrasLargeurTextboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasLargeurTextboxMouseEntered
         appliquerCouleurBordureChampSelectionner(this.BrasLargeurTextbox);
    }//GEN-LAST:event_BrasLargeurTextboxMouseEntered

    private void PaquetAngleTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetAngleTextboxKeyReleased
        if (this.validerAnglePaquet()) {
            this.reinitialiserChampErreur(this.AngleLabel, this.PaquetAngleTextbox);
            this.cacherPanneauBandeau();
            this.modifierAnglePaquet();
        }
    }//GEN-LAST:event_PaquetAngleTextboxKeyReleased

    private void PaquetXTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetXTextboxKeyReleased
        if (this.validerPositionXPaquet()) {
            this.reinitialiserChampErreur(this.XPaquetLabel, this.PaquetXTextbox);
            this.cacherPanneauBandeau();
            this.modifierPositionXPaquet();
        }
    }//GEN-LAST:event_PaquetXTextboxKeyReleased

    private void PaquetYTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetYTextboxKeyReleased
        if (this.validerPositionYPaquet()) {
            this.reinitialiserChampErreur(this.YLabelLabel, this.PaquetYTextbox);
            this.cacherPanneauBandeau();
            this.modifierPositionYPaquet();
        }
    }//GEN-LAST:event_PaquetYTextboxKeyReleased

    private void PaquetProduitTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetProduitTextboxKeyReleased
        this.modifierProduitPaquet();
    }//GEN-LAST:event_PaquetProduitTextboxKeyReleased

    private void PaquetHauteurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetHauteurTextboxKeyReleased
        if (this.validerHauteurPaquet()) {
            this.reinitialiserChampErreur(this.ProfondeurLabel, this.PaquetHauteurTextbox);
            this.cacherPanneauBandeau();
            this.modifierHauteurPaquet();
        }
    }//GEN-LAST:event_PaquetHauteurTextboxKeyReleased

    private void PaquetLongueurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetLongueurTextboxKeyReleased
        if (this.validerLongueurPaquet()) {
            this.reinitialiserChampErreur(this.LongueurLabel, this.PaquetLongueurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLongueurPaquet();
        }
    }//GEN-LAST:event_PaquetLongueurTextboxKeyReleased

    private void PaquetLargeurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PaquetLargeurTextboxKeyReleased
        if (this.validerLargeurPaquet()) {
            this.reinitialiserChampErreur(this.LargeurLabel, this.PaquetLargeurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLargeurPaquet();
        }
    }//GEN-LAST:event_PaquetLargeurTextboxKeyReleased

    private void AjouterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjouterButtonMouseClicked
        this.fixerModeApplicationAjoutOuSelection();
    }//GEN-LAST:event_AjouterButtonMouseClicked

    private void AjouterButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjouterButtonMouseEntered
        this.appliquerCouleurBoutonToggle(this.AjouterButton);
    }//GEN-LAST:event_AjouterButtonMouseEntered

    private void AjouterButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjouterButtonMouseExited
        this.reinitialiserCouleurBoutonToggle(this.AjouterButton);
    }//GEN-LAST:event_AjouterButtonMouseExited

    private void ChargeuseXTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChargeuseXTextboxKeyReleased
        if (this.validerPositionXChargeuse()) {
            this.reinitialiserChampErreur(this.ChargeuseXLabel, this.ChargeuseXTextbox);
            this.cacherPanneauBandeau();
            this.modifierPositionXChargeuse();
        }
    }//GEN-LAST:event_ChargeuseXTextboxKeyReleased

    private void ChargeuseYTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChargeuseYTextboxKeyReleased
        if (this.validerPositionYChargeuse()) {
            this.reinitialiserChampErreur(this.ChargeuseYLabel, this.ChargeuseYTextbox);
            this.cacherPanneauBandeau();
            this.modifierPositionYChargeuse();
        }
    }//GEN-LAST:event_ChargeuseYTextboxKeyReleased

    private void ChargeuseLongueurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChargeuseLongueurTextboxKeyReleased
        if (this.validerLongueurChargeuse()) {
            this.reinitialiserChampErreur(this.ChargeuseLongueurLabel, this.ChargeuseLongueurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLongueurChargeuse();
        }
    }//GEN-LAST:event_ChargeuseLongueurTextboxKeyReleased

    private void ChargeuseLargeurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChargeuseLargeurTextboxKeyReleased
        if (this.validerLargeurChargeuse()) {
            this.reinitialiserChampErreur(this.ChargeuseLargeurLabel, this.ChargeuseLargeurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLargeurChargeuse();
        }
    }//GEN-LAST:event_ChargeuseLargeurTextboxKeyReleased

    private void BrasHauteurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasHauteurTextboxKeyReleased
        if (this.validerHauteurBrasChargeuse()) {
            this.reinitialiserChampErreur(this.BrasHauteurLabel, this.BrasHauteurTextbox);
            this.cacherPanneauBandeau();
            this.modifierHauteurBrasChargeuse();
        }
    }//GEN-LAST:event_BrasHauteurTextboxKeyReleased

    private void BrasAngleTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasAngleTextboxKeyReleased
        if (this.validerAngleChargeuse()) {
            this.reinitialiserChampErreur(this.BrasAngleLabel, this.BrasAngleTextbox);
            this.cacherPanneauBandeau();
            this.modifierAngleChargeuse();
        }
    }//GEN-LAST:event_BrasAngleTextboxKeyReleased

    private void BrasLongueurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasLongueurTextboxKeyReleased
        if (this.validerLongueurBrasChargeuse()) {
            this.reinitialiserChampErreur(this.BrasLongueurLabel1, this.BrasLongueurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLongueurBrasChargeuse();
        }
    }//GEN-LAST:event_BrasLongueurTextboxKeyReleased

    private void BrasLargeurTextboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasLargeurTextboxKeyReleased
        if (this.validerLargeurBrasChargeuse()) {
            this.reinitialiserChampErreur(this.BrasLargeurLabel1, this.BrasLargeurTextbox);
            this.cacherPanneauBandeau();
            this.modifierLargeurBrasChargeuse();
        }
    }//GEN-LAST:event_BrasLargeurTextboxKeyReleased

    private void ReinitialiserBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReinitialiserBoutonActionPerformed
        if (!this.controleur.controleurEstDansEtatInitial()) {
            JFrame frame = new JFrame();
            Object[] options = {"Oui, réinitialiser la cours",
                                "Annuler"};
            int choixReinitialisation = JOptionPane.showOptionDialog(frame,
                                                                     "Voulez-vous vraiment réinitialiser la cours à bois?",
                                                                     "Réinitialisation cours à bois",
                                                                     JOptionPane.YES_NO_CANCEL_OPTION,
                                                                     JOptionPane.QUESTION_MESSAGE,
                                                                     null,
                                                                     options,
                                                                     options[1]);

            if (choixReinitialisation == VALEUR_ZERO) {
                this.ajouterAncienneVersion();
                this.controleur.reinitialiserCoursABois();
                this.repeindreCourABois();
                this.repaintDrawingPannelPile();
                this.SupprimerBouton.setVisible(false);
            }
        }
    }//GEN-LAST:event_ReinitialiserBoutonActionPerformed

    private void BrasChargeusePositionXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasChargeusePositionXFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionXFocusGained

    private void BrasChargeusePositionXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasChargeusePositionXFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionXFocusLost

    private void BrasChargeusePositionXMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasChargeusePositionXMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionXMouseEntered

    private void BrasChargeusePositionXMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasChargeusePositionXMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionXMouseExited

    private void BrasChargeusePositionXKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasChargeusePositionXKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionXKeyReleased

    private void BrasChargeusePositionYFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasChargeusePositionYFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionYFocusGained

    private void BrasChargeusePositionYFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BrasChargeusePositionYFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionYFocusLost

    private void BrasChargeusePositionYMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasChargeusePositionYMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionYMouseEntered

    private void BrasChargeusePositionYMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrasChargeusePositionYMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionYMouseExited

    private void BrasChargeusePositionYKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrasChargeusePositionYKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_BrasChargeusePositionYKeyReleased

    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    public ModeApplication obtenirModeApplication() {
        return this.modeApplication;
    }

    public void fixerModeApplication(ModeApplication newMode) {
        this.modeApplication = newMode;
    }
    
    private void reinitialiserCouleurChampErreur() {
        this.reinitialiserChampErreur(this.XPaquetLabel, this.PaquetXTextbox);
        this.reinitialiserChampErreur(this.YLabelLabel, this.PaquetYTextbox);
        this.reinitialiserChampErreur(this.ProfondeurLabel, this.PaquetHauteurTextbox);
        this.reinitialiserChampErreur(this.AngleLabel, this.PaquetAngleTextbox);
        this.reinitialiserChampErreur(this.LongueurLabel, this.PaquetLongueurTextbox);
        this.reinitialiserChampErreur(this.LargeurLabel, this.PaquetLargeurTextbox);
    }
    
    private void reinitialiserChampErreur(JLabel libelle, JTextField champTexte) {
        if (this.validerEstChampErreur(champTexte)) {
            this.reinitialiserCouleurLibelle(libelle);
            this.reinitialiserCouleurBordureChampCommun(champTexte);
        }
    }
    
    private boolean validerEstChampErreur(JTextField champTexte) {        
        return ((MatteBorder)champTexte.getBorder()).getMatteColor().equals(COULEUR_CHAMP_ERREUR);
    }

    private void appliquerCouleurErreur(JLabel libelle, JTextField champTexte) {
        this.appliquerCouleurErreurLibelle(libelle);
        this.appliquerCouleurErreurChampTexte(champTexte);
    }
    
    private void appliquerCouleurErreurLibelle(JLabel libelle) {
        libelle.setForeground(COULEUR_CHAMP_ERREUR);
    }
    
    private void appliquerCouleurErreurChampTexte(JTextField champTexte) {
        champTexte.setBorder(BorderFactory.createMatteBorder(VALEUR_ZERO, VALEUR_ZERO, HAUTEUR_BORDURE, VALEUR_ZERO, COULEUR_CHAMP_ERREUR));
    }
    
    private void appliquerCouleurBordureChampSelectionner(JTextField champTexte) {
        if (!this.validerEstChampErreur(champTexte) && champTexte.isEnabled()) {
            champTexte.setBorder(BorderFactory.createMatteBorder(VALEUR_ZERO, VALEUR_ZERO, HAUTEUR_BORDURE, VALEUR_ZERO, COULEUR_BORDURE_CHAMP_SELECTIONNE));
        }
    }

    private void reinitialiserCouleurBordureChamp(JTextField champTexte) {
        if (!this.validerEstChampErreur(champTexte)) {
            this.reinitialiserCouleurBordureChampCommun(champTexte);
        }
    }
    
    private void reinitialiserCouleurBordureChampCommun(JTextField champTexte) {
        champTexte.setBorder(BorderFactory.createMatteBorder(VALEUR_ZERO, VALEUR_ZERO, HAUTEUR_BORDURE, VALEUR_ZERO, COULEUR_BORDURE_CHAMP));
    }

    private void reinitialiserCouleurBordureChampSourisQuitte(javax.swing.JTextField champTexte) {
        if (getFocusOwner() != champTexte) {
            reinitialiserCouleurBordureChamp(champTexte);
        }
    }
    
    private void reinitialiserCouleurLibelle(JLabel libelle) {
        libelle.setForeground(COULEUR_LIBELLE);
    }

    private void appliquerCouleurBouton(JButton bouton) {
        bouton.setBackground(COULEUR_BOUTON_SELECTIONNE);
        bouton.setForeground(new Color(255, 255, 255));
    }

    private void reinitialiserCouleurBouton(JButton bouton) {
        bouton.setForeground(COULEUR_BOUTON);
        bouton.setBackground(new Color(255, 255, 255));
    }
    
    private void appliquerCouleurBoutonToggle(JToggleButton bouton) {
        bouton.setBackground(COULEUR_BOUTON_SELECTIONNE);
        bouton.setForeground(new Color(255, 255, 255));
    }
    
    private void reinitialiserCouleurBoutonToggle(JToggleButton bouton) {
        bouton.setForeground(COULEUR_BOUTON);
        bouton.setBackground(new Color(255, 255, 255));
    }
 
    public void actualiserPositionSouris(double posSourisX, double posSourisY) {
        this.SourisXTextbox.setText(String.valueOf(posSourisX));
        this.SourisYTextbox.setText(String.valueOf(posSourisY));
    }

    public void afficherInfosNouveauPaquet(Paquet paquet) {
        this.PaquetXTextbox.setText(String.valueOf(paquet.obtenirPositionX()));
        this.PaquetYTextbox.setText(String.valueOf(paquet.obtenirPositionY()));
        this.PaquetHauteurTextbox.setText(String.valueOf(paquet.obtenirHauteur()));
        this.PaquetProduitTextbox.setText(String.valueOf(paquet.obtenirProduit()));
        this.PaquetAngleTextbox.setText(String.valueOf(paquet.obtenirAngle()));
        this.PaquetLongueurTextbox.setText(String.valueOf(paquet.obtenirLongueur()));
        this.PaquetLargeurTextbox.setText(String.valueOf(paquet.obtenirLargeur()));
        this.PaquetZTextbox.setText(String.valueOf(paquet.obtenirPositionZ()));
        this.PaquetEtageTextbox.setText(String.valueOf(paquet.obtenirEtage()));
        this.PaquetDateProductionTextbox.setText(this.formaterDateProduction(paquet.obtenirDateProduction()));
        this.PaquetCodeBarreTextbox.setText(paquet.obtenirCodeBarre());
    }
    
    private String formaterDateProduction(Date dateProduction) {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/mm/dd hh:mm:ss");
        return dateFormat.format(dateProduction);
    }

    public void afficherInformationPaquetSelectionne() {
        if (controleur.obtenirIndicePaquetSelectionne() != -1){
            Paquet paquet = controleur.obtenirPaquetSelectionne();
            this.PaquetCodeBarreTextbox.setText(paquet.obtenirCodeBarre());
            this.PaquetXTextbox.setText(String.valueOf(Math.round(paquet.obtenirPositionX() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
            this.PaquetYTextbox.setText(String.valueOf(Math.round(paquet.obtenirPositionY() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
            DateFormat dateFormat = new SimpleDateFormat("yyyy/mm/dd hh:mm:ss");
            String strDate = dateFormat.format(paquet.obtenirDateProduction());
            this.PaquetDateProductionTextbox.setText(strDate);
            this.PaquetLongueurTextbox.setText(String.valueOf(paquet.obtenirLongueur()));
            this.PaquetLargeurTextbox.setText(String.valueOf(paquet.obtenirLargeur()));
            this.PaquetAngleTextbox.setText(String.valueOf(paquet.obtenirAngle()));
            this.PaquetZTextbox.setText(String.valueOf(paquet.obtenirPositionZ()));
            this.PaquetEtageTextbox.setText(String.valueOf(paquet.obtenirEtage()));
            this.PaquetHauteurTextbox.setText(String.valueOf(paquet.obtenirHauteur()));
            this.PaquetProduitTextbox.setText(paquet.obtenirProduit());
        }
    }

    public DrawingPanelAffichagePile obtenirDrawingPannelPile() {
        return this.drawingPanelAffichagePile1;
    }

    public JButton obtenirSupprimerBouton() {
        return this.SupprimerBouton;
    }

    public void changerInformationChargeuse() {
        this.ChargeuseXTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPositionX() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.ChargeuseYTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPositionY() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.ChargeuseLongueurTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirLongueur() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.ChargeuseLargeurTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirLargeur() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE)); 
        this.BrasAngleTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirAngle() * VALEUR_DIX_MILLE) / VALEUR_DIX_MILLE));
        this.BrasHauteurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirHauteurBras()));
        this.BrasLongueurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirLongueur()));
        this.BrasLargeurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirLargeur()));
        this.mettreAJourPositionBrasChargeuse();
    }

    public JTextField obtenirPaquetXTextbox() {
        return this.PaquetXTextbox;
    }

    public JTextField obtenirPaquetYTextbox() {
        return this.PaquetYTextbox;
    }

    public JTextField obtenirPaquetEtageTextbox() {
        return this.PaquetEtageTextbox;
    }

    public JTextField obtenirPaquetZTextbox() {
        return this.PaquetZTextbox;
    }
        
    public void repaintDrawingPannelPile() {
        this.drawingPanelAffichagePile1.repaint();
        this.nbPaquetPileTextBox.setText(Integer.toString(this.controleur.obtenirNombrePaquetsPiles()));
        this.PaquetZTextbox1.setText(Double.toString(this.controleur.obtenirHauteurPile()));
    }

    public void ajouterAncienneVersion() {
        VirtuBoisControleur ancienneVersion = new VirtuBoisControleur(this.controleur);
        this.anciensEtats.add(ancienneVersion);
    }
    
    private void modifierHauteurPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierHauteurPaquet(Double.parseDouble(this.PaquetHauteurTextbox.getText()));
        this.repeindreCourABois();
    }
    
    private void modifierProduitPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierProduitPaquet(this.PaquetProduitTextbox.getText());
    }
    
    private void modifierAnglePaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierAnglePaquet(Double.parseDouble(this.PaquetAngleTextbox.getText()));
        this.mettreAJourInformationPaquetApresModification();
        this.repeindreCourABois();
    }
    
    private void modifierLongueurPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLongueurPaquet(Double.parseDouble(this.PaquetLongueurTextbox.getText()));
        this.mettreAJourInformationPaquetApresModification();
        this.repeindreCourABois();
    }
    
    private void modifierLargeurPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLargeurPaquet(Double.parseDouble(this.PaquetLargeurTextbox.getText()));
        this.mettreAJourInformationPaquetApresModification();
        this.repeindreCourABois();
    }
    
    private void modifierPositionXPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierPositionXPaquet(Double.parseDouble(this.PaquetXTextbox.getText()));
        this.mettreAJourInformationPaquetApresModification();
        this.repeindreCourABois();
    }
    
    private void modifierPositionYPaquet() {
        this.ajouterAncienneVersion();
        this.controleur.modifierPositionYPaquet(Double.parseDouble(this.PaquetYTextbox.getText()));
        this.mettreAJourInformationPaquetApresModification();
        this.repeindreCourABois();
    }
    
    private void mettreAJourInformationPaquetApresModification() {
        this.PaquetEtageTextbox.setText(Integer.toString(this.controleur.obtenirEtagePaquetSelectionne()));
        this.PaquetZTextbox.setText(Double.toString(this.controleur.obtenirPositionZPaquetSelectionne()));
    }
    
    private void modifierPositionXChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierPositionXChargeuse(Double.parseDouble(this.ChargeuseXTextbox.getText()));
        this.mettreAJourPositionBrasChargeuse();
        this.repeindreCourABois();
    }
    
    private void modifierPositionYChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierPositionYChargeuse(Double.parseDouble(this.ChargeuseYTextbox.getText()));
        this.mettreAJourPositionBrasChargeuse();
        this.repeindreCourABois();
    }
    
    private void modifierLongueurChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLongueurChargeuse(Double.parseDouble(this.ChargeuseLongueurTextbox.getText()));
        this.mettreAJourPositionBrasChargeuse();
        this.repeindreCourABois();
    }
    
    private void modifierLargeurChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLargeurChargeuse(Double.parseDouble(this.ChargeuseLargeurTextbox.getText()));
        this.repeindreCourABois();
    }
    
    private void modifierAngleChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierAngleChargeuse(Double.parseDouble(this.BrasAngleTextbox.getText()));
        this.mettreAJourPositionBrasChargeuse();
        this.repeindreCourABois();
    }
    
    private void modifierHauteurBrasChargeuse() {
        this.ajouterAncienneVersion();
        double nouvelleHauteurBrasChargeuse = Double.parseDouble(this.BrasHauteurTextbox.getText());
        double ancienneHauteurBrasChargeuse = this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirPositionZ();
        
        if (nouvelleHauteurBrasChargeuse > ancienneHauteurBrasChargeuse) {
            this.controleur.gestionLeverBras(nouvelleHauteurBrasChargeuse - ancienneHauteurBrasChargeuse);
        }
        else {
            this.controleur.gestionBaisserBras(ancienneHauteurBrasChargeuse - nouvelleHauteurBrasChargeuse);
        }
        
        this.repeindreCourABois();
    }
    
    private void modifierLongueurBrasChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLongueurBrasChargeuse(Double.parseDouble(this.BrasLongueurTextbox.getText()));
        this.mettreAJourPositionBrasChargeuse();
        this.repeindreCourABois();
    }
    
    private void modifierLargeurBrasChargeuse() {
        this.ajouterAncienneVersion();
        this.controleur.modifierLargeurBrasChargeuse(Double.parseDouble(this.BrasLargeurTextbox.getText()));
        this.repeindreCourABois();
    }
    
    private boolean validerAnglePaquet() {
        return this.validerChampAngle(this.AngleLabel, this.PaquetAngleTextbox);
    }
    
    private boolean validerHauteurPaquet() {
        return validerChampDecimalNonNegatif(this.ProfondeurLabel, this.PaquetHauteurTextbox, "hauteur");
    }
    
    private boolean validerLongueurPaquet() {
        return validerChampDecimalNonNegatif(this.LongueurLabel, this.PaquetLongueurTextbox, "longueur") &&
               validerPositionPaquet();
    }
    
    private boolean validerLargeurPaquet() {
        return validerChampDecimalNonNegatif(this.LargeurLabel, this.PaquetLargeurTextbox, "largeur") &&
               validerPositionPaquet();
    }
    
    private boolean validerPositionXPaquet() {
        return validerChampDecimal(this.XPaquetLabel, this.PaquetXTextbox, "position X") &&
               validerPositionPaquet();
    }
    
    private boolean validerPositionYPaquet() {
        return validerChampDecimal(this.YLabelLabel, this.PaquetYTextbox, "position Y") &&
               validerPositionPaquet();
    }
    
    private boolean validerPositionPaquet() {
        boolean positionPaquetValide = true;
        
        if (controleur.PaquetSurChargeuse(Double.parseDouble(this.PaquetXTextbox.getText()),
                                          Double.parseDouble(this.PaquetYTextbox.getText()),
                                          Double.parseDouble(this.PaquetLongueurTextbox.getText()),
                                          Double.parseDouble(this.PaquetLargeurTextbox.getText()),
                                          Double.parseDouble(this.PaquetAngleTextbox.getText()))) {
            this.afficherPanneauBandeau("Le paquet ne doit pas etre placé sur la chargeuse");
            positionPaquetValide = false;
        }
        
        return positionPaquetValide;
    }
    
    private boolean validerPositionXChargeuse() {
        return this.validerChampDecimal(this.ChargeuseXLabel, this.ChargeuseXTextbox, "position X") &&
               this.validerDeplacementChargeuse();
    }
    
    private boolean validerPositionYChargeuse() {
        return this.validerChampDecimal(this.ChargeuseYLabel, this.ChargeuseYTextbox, "position Y") &&
               this.validerDeplacementChargeuse();
    }
    
    private boolean validerLongueurChargeuse() {
        return this.validerChampDecimalNonNegatif(this.ChargeuseLongueurLabel, this.ChargeuseLongueurTextbox, "longueur") &&
               this.validerDeplacementChargeuse();
    }
    
    private boolean validerLargeurChargeuse() {
        return this.validerChampDecimalNonNegatif(this.ChargeuseLargeurLabel, this.ChargeuseLargeurTextbox, "largeur") &&
               this.validerDeplacementChargeuse() &&
               this.validerLargeurBrasAvecLargeurChargeuse();
    }
    
    private boolean validerHauteurBrasChargeuse() {
        return this.validerChampDecimalAvecZero(this.BrasHauteurLabel, this.BrasHauteurTextbox, "hauteur");
    }
    
    private boolean validerAngleChargeuse() {
        return this.validerChampAngle(this.BrasAngleLabel, this.BrasAngleTextbox) &&
               this.validerDeplacementChargeuse();
    }
    
    private boolean validerLongueurBrasChargeuse() {
        return this.validerChampDecimalNonNegatif(this.BrasLongueurLabel1, this.BrasLongueurTextbox, "longeur des bras");
    }
    
    private boolean validerLargeurBrasChargeuse() {
        return this.validerChampDecimalNonNegatif(this.BrasLargeurLabel1, this.BrasLargeurTextbox, "largeur des bras") &&
               this.validerLargeurBrasAvecLargeurChargeuse();
    }
    
    private boolean validerDeplacementChargeuse() {
        boolean positionChargeuseValide = true;
        
        if (this.controleur.chargeuseTouchePaquet(this.controleur.creerChargeuseTemporaire(Double.parseDouble(this.ChargeuseXTextbox.getText()),
                                                                                           Double.parseDouble(this.ChargeuseYTextbox.getText()),
                                                                                           Double.parseDouble(this.BrasAngleTextbox.getText()),
                                                                                           Double.parseDouble(this.ChargeuseLargeurTextbox.getText()),
                                                                                           Double.parseDouble(this.ChargeuseLongueurTextbox.getText())))) {
            this.afficherPanneauBandeau("Tentative de déplacer la chargeuse sur un paquet");
            positionChargeuseValide = false;
        }
        
        return positionChargeuseValide;
    }
    
    private boolean validerLargeurBrasAvecLargeurChargeuse() {
        boolean largeurBrasValide = true;
        
        if (this.controleur.validerLargeurBrasAvecLargeurChargeuse(Double.parseDouble(this.BrasLargeurTextbox.getText()),
                                                                   Double.parseDouble(this.ChargeuseLargeurTextbox.getText()))) {
            this.afficherPanneauBandeau("La largeur des bras ne peut dépasser la largeur de la chargeuse");
            largeurBrasValide = false;
        }
        
        return largeurBrasValide;
    }
    
    private boolean validerChampAngle(JLabel libelle, JTextField champTexte) {
        boolean champValide = validerChampDecimal(libelle, champTexte, "angle");
        
        if (champValide) {
            double valeurChamp = Double.parseDouble(champTexte.getText());
            
            if (valeurChamp < -ANGLE_COMPLET_CERCLE || valeurChamp > ANGLE_COMPLET_CERCLE) {
                this.afficherPanneauBandeau("La valeur du champ angle doit être compris entre -" + ANGLE_COMPLET_CERCLE + " et " + ANGLE_COMPLET_CERCLE + " degrées");
                this.appliquerCouleurErreur(libelle, champTexte);
                champValide = false;
            }
        }        
        
        return champValide;
    }
    
    private boolean validerChampDecimalAvecZero(JLabel libelle, JTextField champTexte, String nomChamp) {
        boolean champValide = validerChampDecimal(libelle, champTexte, nomChamp);
        
        if (champValide) {
            if (Double.parseDouble(champTexte.getText()) < VALEUR_ZERO) {
                this.afficherPanneauBandeau("La valeur du champ " + nomChamp + " doit être positif");
                this.appliquerCouleurErreur(libelle, champTexte);
                champValide = false;
            }
        }
        
        return champValide;
    }
    
    private boolean validerChampDecimalNonNegatif(JLabel libelle, JTextField champTexte, String nomChamp) {
        boolean champValide = validerChampDecimal(libelle, champTexte, nomChamp);
        
        if (champValide) {
            if (Double.parseDouble(champTexte.getText()) <= 0) {
                this.afficherPanneauBandeau("La valeur du champ " + nomChamp + " doit être supérieur à 0");
                this.appliquerCouleurErreur(libelle, champTexte);
                champValide = false;
            }
        }
        
        return champValide;
    }
    
    private boolean validerChampDecimal(JLabel libelle, JTextField champTexte, String nomChamp) {
        boolean champValide = true;
        
        if (champTexte.getText().isEmpty()) {
            this.afficherPanneauBandeau("Le champ " + nomChamp + " est requis.");
            this.appliquerCouleurErreur(libelle, champTexte);
            champValide = false;
        }
        else if (!this.verifierValeurEstDecimal(champTexte.getText())) {
            this.afficherPanneauBandeau("Le champ " + nomChamp + " doit être un nombre.");
            this.appliquerCouleurErreur(libelle, champTexte);
            champValide = false;
        }
        
        return champValide;
    }
    
    private boolean verifierValeurEstDecimal(String valeur) {
        try {
            Double.parseDouble(valeur);
            return true;
        }
        catch(NumberFormatException e) {
            return false;
        }
    }

    private void cacherPanneauBandeau() {
        this.PanneauBandeau.setVisible(false);
    }
    
    private void afficherPanneauBandeau(String message) {
        this.PanneauBandeau.setVisible(true);
        this.LibelleBandeau.setText(message);
    }
    
    public void viderTextBox() {
        this.PaquetCodeBarreTextbox.setText("");
        this.PaquetXTextbox.setText("");
        this.PaquetYTextbox.setText("");
        this.PaquetDateProductionTextbox.setText("");
        this.PaquetLongueurTextbox.setText("");
        this.PaquetLargeurTextbox.setText("");
        this.PaquetAngleTextbox.setText("");
        this.PaquetZTextbox.setText("");
        this.PaquetEtageTextbox.setText("");
        this.PaquetHauteurTextbox.setText("");
        this.PaquetProduitTextbox.setText("");
    }
    
    public void repeindreCourABois() {
        this.drawingPanelCoursABois1.repaint();
    }
    
    public void modeAucunPaquetSelectionne() {
        this.viderTextBox();
        this.reinitialiserCouleurChampErreur();
        this.cacherPanneauBandeau();
        this.SupprimerBouton.setVisible(false);
    }
    
    public boolean validerEmplacementNouveauPaquet(double xSouris, double ySouris) {
        boolean emplacementNouveauPaquetValide = true;
        
        if (this.controleur.PaquetSurChargeuse(xSouris,
                                               ySouris,
                                               NOUVEAU_PAQUET_LONGUEUR,
                                               NOUVEAU_PAQUET_LARGEUR,
                                               NOUVEAU_PAQUET_ANGLE)) {
            this.afficherPanneauBandeau("Le paquet ne doit pas etre placé sur la chargeuse");
            emplacementNouveauPaquetValide = false;
        }
        else {
            this.cacherPanneauBandeau();
        }
        
        return emplacementNouveauPaquetValide;
    }
    
    private void fixerModeApplicationAjoutOuSelection() {
        if (this.AjouterButton.isSelected()) {
            this.fixerModeApplication(ModeApplication.AJOUT);
        }
        else {
            this.fixerModeApplication(ModeApplication.SELECTION);
        }
    }
    
    private void ajusterDonneesChargeuseUndoRedo() {
        this.ChargeuseXTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPositionX() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.ChargeuseYTextbox.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPositionY() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.ChargeuseLongueurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirLongueur()));
        this.ChargeuseLargeurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirLargeur()));
        this.BrasAngleTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirAngle()));
        this.BrasHauteurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirHauteur()));
        this.BrasLongueurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirLongueur()));
        this.BrasLargeurTextbox.setText(String.valueOf(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirLargeur()));
        this.mettreAJourPositionBrasChargeuse();
    }
    
    private void mettreAJourPositionBrasChargeuse() {
        this.BrasChargeusePositionX.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirPositionY() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
        this.BrasChargeusePositionY.setText(String.valueOf(Math.round(this.controleur.obtenirChargeuse().obtenirPaireDeBras().obtenirPositionX() * VALEUR_DIX_MILLE) / (double)VALEUR_DIX_MILLE));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton AjouterButton;
    private javax.swing.JLabel AngleLabel;
    private javax.swing.JButton BoutonFermerBandeau;
    private javax.swing.JLabel BrasAngleLabel;
    private javax.swing.JTextField BrasAngleTextbox;
    private javax.swing.JTextField BrasChargeusePositionX;
    private javax.swing.JTextField BrasChargeusePositionY;
    private javax.swing.JLabel BrasHauteurLabel;
    private javax.swing.JTextField BrasHauteurTextbox;
    private javax.swing.JLabel BrasLargeurLabel1;
    private javax.swing.JTextField BrasLargeurTextbox;
    private javax.swing.JLabel BrasLongueurLabel1;
    private javax.swing.JTextField BrasLongueurTextbox;
    private javax.swing.JLabel ChargeuseLargeurLabel;
    private javax.swing.JTextField ChargeuseLargeurTextbox;
    private javax.swing.JLabel ChargeuseLongueurLabel;
    private javax.swing.JTextField ChargeuseLongueurTextbox;
    private javax.swing.JScrollPane ChargeuseScrollPan;
    private javax.swing.JLabel ChargeuseXLabel;
    private javax.swing.JTextField ChargeuseXTextbox;
    private javax.swing.JLabel ChargeuseYLabel;
    private javax.swing.JTextField ChargeuseYTextbox;
    private javax.swing.JLabel CodeLabel;
    private javax.swing.JPanel CoordSourisCorpsPanel;
    private javax.swing.JPanel CoordSourisEntetePanel;
    private javax.swing.JPanel CoordSourisPanel;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JButton DeplacementBoutonBas;
    private javax.swing.JButton DeplacementBoutonDroite;
    private javax.swing.JButton DeplacementBoutonGauche;
    private javax.swing.JButton DeplacementBoutonHaut;
    private javax.swing.JButton DezoomerButton;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JPanel Entete;
    private javax.swing.JMenuItem Export3DButton;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JToggleButton GrilleMagnetiqueBouton;
    private javax.swing.JLabel HauteurLabel;
    private javax.swing.JPanel InfoChargeuseCorpsPanel;
    private javax.swing.JPanel InfoChargeuseEntetePanel;
    private javax.swing.JPanel InfoChargeusePanel;
    private javax.swing.JPanel InfoPaquetEntetePanel;
    private javax.swing.JScrollPane InfoPaquetFenetrePanel;
    private javax.swing.JLabel LargeurLabel;
    private javax.swing.JLabel LibelleBandeau;
    private javax.swing.JLabel LibellePositionXBrasChargeuse;
    private javax.swing.JLabel LibellePositionYBrasChargeuse;
    private javax.swing.JMenuItem LoadFileButton;
    private javax.swing.JLabel LongueurLabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel PanneauBandeau;
    private javax.swing.JTextField PaquetAngleTextbox;
    private javax.swing.JTextField PaquetCodeBarreTextbox;
    private javax.swing.JTextField PaquetDateProductionTextbox;
    private javax.swing.JTextField PaquetEtageTextbox;
    private javax.swing.JTextField PaquetHauteurTextbox;
    private javax.swing.JTextField PaquetLargeurTextbox;
    private javax.swing.JTextField PaquetLongueurTextbox;
    private javax.swing.JTextField PaquetProduitTextbox;
    private javax.swing.JTextField PaquetXTextbox;
    private javax.swing.JTextField PaquetYTextbox;
    private javax.swing.JTextField PaquetZTextbox;
    private javax.swing.JTextField PaquetZTextbox1;
    private javax.swing.JLabel ProduitLabel;
    private javax.swing.JLabel ProfondeurLabel;
    private javax.swing.JMenuItem QuitButton;
    private javax.swing.JMenuItem ReinitialiserBouton;
    private javax.swing.JMenuItem RepeatButton;
    private javax.swing.JMenuItem SaveButton;
    private javax.swing.JLabel SourisXLabel;
    private javax.swing.JTextField SourisXTextbox;
    private javax.swing.JLabel SourisYLabel;
    private javax.swing.JTextField SourisYTextbox;
    private javax.swing.JButton SupprimerBouton;
    private javax.swing.JLabel TitreBrasLabel;
    private javax.swing.JLabel TitreChargeuseLabel;
    private javax.swing.JLabel TitreCoordSourisLabel;
    private javax.swing.JLabel TitreVuePileLabel;
    private javax.swing.JMenuItem UndoButton;
    private javax.swing.JPanel VuePileEntetePanel;
    private javax.swing.JPanel VuePilePanel;
    private javax.swing.JLabel XPaquetLabel;
    private javax.swing.JLabel YLabelLabel;
    private javax.swing.JLabel ZLabel;
    private javax.swing.JLabel ZLabel1;
    private javax.swing.JLabel ZLabel2;
    private javax.swing.JButton ZoomerButton;
    private virtubois.gui.DrawingPanelAffichagePile drawingPanelAffichagePile1;
    private virtubois.gui.DrawingPanelCoursABois drawingPanelCoursABois1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField nbPaquetPileTextBox;
    // End of variables declaration//GEN-END:variables
}
